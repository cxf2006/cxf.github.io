import{_ as t,o as a,c as e,b as n}from"./app-b63b8632.js";const s={},l=n(`<h1 id="java特性" tabindex="-1"><a class="header-anchor" href="#java特性" aria-hidden="true">#</a> Java特性</h1><p>Summary：Java相关的功能和指导。</p><h2 id="对于java版本的支持情况" tabindex="-1"><a class="header-anchor" href="#对于java版本的支持情况" aria-hidden="true">#</a> 对于Java版本的支持情况</h2><p>​ 通常，最新的非预览Java版本是默认版本。</p><table><thead><tr><th style="text-align:left;">Java Version</th><th style="text-align:left;">Alias</th><th style="text-align:left;">Supported by PMD since</th></tr></thead><tbody><tr><td style="text-align:left;">21-preview</td><td style="text-align:left;"></td><td style="text-align:left;">7.0.0</td></tr><tr><td style="text-align:left;">21 (default)</td><td style="text-align:left;"></td><td style="text-align:left;">7.0.0</td></tr><tr><td style="text-align:left;">20-preview</td><td style="text-align:left;"></td><td style="text-align:left;">6.55.0</td></tr><tr><td style="text-align:left;">20</td><td style="text-align:left;"></td><td style="text-align:left;">6.55.0</td></tr><tr><td style="text-align:left;">19</td><td style="text-align:left;"></td><td style="text-align:left;">6.48.0</td></tr><tr><td style="text-align:left;">18</td><td style="text-align:left;"></td><td style="text-align:left;">6.44.0</td></tr><tr><td style="text-align:left;">17</td><td style="text-align:left;"></td><td style="text-align:left;">6.37.0</td></tr><tr><td style="text-align:left;">16</td><td style="text-align:left;"></td><td style="text-align:left;">6.32.0</td></tr><tr><td style="text-align:left;">15</td><td style="text-align:left;"></td><td style="text-align:left;">6.27.0</td></tr><tr><td style="text-align:left;">14</td><td style="text-align:left;"></td><td style="text-align:left;">6.22.0</td></tr><tr><td style="text-align:left;">13</td><td style="text-align:left;"></td><td style="text-align:left;">6.18.0</td></tr><tr><td style="text-align:left;">12</td><td style="text-align:left;"></td><td style="text-align:left;">6.13.0</td></tr><tr><td style="text-align:left;">11</td><td style="text-align:left;"></td><td style="text-align:left;">6.6.0</td></tr><tr><td style="text-align:left;">10</td><td style="text-align:left;">1.10</td><td style="text-align:left;">6.4.0</td></tr><tr><td style="text-align:left;">9</td><td style="text-align:left;">1.9</td><td style="text-align:left;">6.0.0</td></tr><tr><td style="text-align:left;">8</td><td style="text-align:left;">1.8</td><td style="text-align:left;">5.1.0</td></tr><tr><td style="text-align:left;">7</td><td style="text-align:left;">1.7</td><td style="text-align:left;">5.0.0</td></tr><tr><td style="text-align:left;">6</td><td style="text-align:left;">1.6</td><td style="text-align:left;">3.9</td></tr><tr><td style="text-align:left;">5</td><td style="text-align:left;">1.5</td><td style="text-align:left;">3.0</td></tr><tr><td style="text-align:left;">1.4</td><td style="text-align:left;"></td><td style="text-align:left;">1.2.2</td></tr><tr><td style="text-align:left;">1.3</td><td style="text-align:left;"></td><td style="text-align:left;">1.0.0</td></tr></tbody></table><h2 id="支持java预览特性" tabindex="-1"><a class="header-anchor" href="#支持java预览特性" aria-hidden="true">#</a> 支持java预览特性</h2><p>​ 为了在PMD分析项目时使用java的预览特性，您需要通过环境变量PMD_JAVA_OPTS启用它，并选择新的语言版本，例如21-preview：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">PMD_JAVA_OPTS</span><span class="token operator">=</span>--enable-preview
pmd check --use-version java-21-preview <span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>⚠️注意：我们仅支持最新的两个Java版本的预览语言功能。</p><p>chatGPT对该功能的介绍</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>PMD是一个用于执行代码静态分析的工具，支持多种编程语言，其中包括Java。Java在每个新版本中都会引入一些新的语言功能和改进，有些功能在发布时被标记为“预览功能”。这些预览功能是Java开发人员可以尝试的新功能，但它们还没有成为Java的正式规范的一部分。PMD支持Java预览功能，这意味着它可以分析和识别在代码中使用了这些预览功能的项目。

以下是有关PMD的Java预览功能的一些重要信息：

1支持新特性：PMD支持Java的预览功能，可以识别和分析在代码中使用的这些新特性。这包括新的语法、语言构造和API。

2版本限制：PMD通常仅支持Java的最新两个版本的预览功能。这意味着只有在Java的最新两个版本中引入的预览功能才会受到支持。

3配置选项：要使用PMD分析项目中使用了Java预览功能的代码，您需要在PMD的配置中启用相应的Java版本。您可以通过设置环境变量PM_DJAVAOPTS来选择所需的Java版本。

4代码质量分析：PMD的目标是帮助开发人员发现潜在的问题、错误和优化机会。它可以在代码中检测到预览功能的使用，并提供有关如何改进代码的建议。

5安全性和可维护性：使用PMD分析预览功能可以帮助确保代码的安全性和可维护性。它可以识别与预览功能相关的潜在风险，并提供建议以改进代码的质量。

总之，PMD的支持Java预览功能使开发人员能够在项目中使用最新的Java语言特性，并确保代码的质量和性能。这有助于开发人员更好地利用Java的最新功能，同时保持代码的可维护性和稳定性。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="类型和符号解析" tabindex="-1"><a class="header-anchor" href="#类型和符号解析" aria-hidden="true">#</a> 类型和符号解析</h2><p>​ 作为一种静态类型语言，Java程序包含比语法树更多的信息；例如，每个表达式都有静态类型，每个方法调用在静态情况下绑定到方法重载（即使该重载是虚拟的）。在PMD中，许多这些信息是通过additional passes从AST中解析出来的，这些通行证在解析之后运行，然后在规则可以检查树之前运行。</p><p>语义分析大致如下：</p><p>​ 第一个passes解析符号，这些符号是Java程序声明的命名实体的模型，如类、方法和变量。 然后，根据语言的作用域规则，将树中的每个名称解析为符号。这可能会修改树以删除模糊不清的名称（可以是类型、包或变量的名称）。 最后一次passes解析表达式的类型，执行方法调用的过载解析和类型推断。</p><p>​ TODO 描述</p><p>​ 为什么我们需要auxclasspath</p><p>​ 歧义消除可能失败的原因</p><p>类型和符号API</p><p>​ TODO</p><h2 id="度量框架" tabindex="-1"><a class="header-anchor" href="#度量框架" aria-hidden="true">#</a> 度量框架</h2><p>​ 要在Java中使用代码度量标准，可以使用JavaMetrics中的度量标准常量，结合MetricsUtil。例如：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">visit</span><span class="token punctuation">(</span><span class="token class-name">ASTMethodDeclaration</span> node<span class="token punctuation">,</span> <span class="token class-name">Object</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">JavaMetrics</span><span class="token punctuation">.</span><span class="token constant">NCSS</span><span class="token punctuation">.</span><span class="token function">supports</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> methodSize <span class="token operator">=</span> <span class="token class-name">MetricsUtil</span><span class="token punctuation">.</span><span class="token function">computeMetric</span><span class="token punctuation">(</span><span class="token class-name">JavaMetrics</span><span class="token punctuation">.</span><span class="token constant">NCSS</span><span class="token punctuation">,</span> node<span class="token punctuation">,</span> ncssOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>methodSize <span class="token operator">&gt;=</span> level<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">addViolation</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> node<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ Javadocs是参考文档。</p>`,24),i=[l];function d(p,c){return a(),e("div",null,i)}const o=t(s,[["render",d],["__file","3Java.html.vue"]]);export{o as default};
