import{_ as e,r as l,o as p,c as i,a,d as n,e as t,b as o}from"./app-42f4feee.js";const c="/notes/assets/designer-overview-with-nums-6c09ab1d.png",u="/notes/assets/image-20231101185402204-a841cf2b.png",r={},d=a("h1",{id:"第一个xpath规则",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#第一个xpath规则","aria-hidden":"true"},"#"),n(" 第一个XPath规则")],-1),v=a("p",null,"​ Summary：通过一个例子说明如何自定义规则。",-1),m=a("p",null,"​ 这里只对规则编写和设计进行一个初步的介绍。",-1),k={href:"https://www.w3schools.com/xml/xpath_syntax.asp",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.saxonica.com/documentation/index.html#!expressions",target:"_blank",rel:"noopener noreferrer"},g=o(`<h2 id="规则设计器" tabindex="-1"><a class="header-anchor" href="#规则设计器" aria-hidden="true">#</a> 规则设计器</h2><p>​ 规则设计器是一款包含很多功能的设计工具，可以帮助开发者轻松快速的完成设计工作。它允许您检查代码片段的抽象语法树（AST）并对其执行XPath表达式进行评估。工具可以检测代码段的抽象语法树(AST)检测XPath表达式。启动工具方法：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>~ $ pmd designer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code>C:\\&gt; pmd.bat designer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>​ 软件界面如下图：</p><p><img src="`+c+`" alt="Designer overview"></p><p>​ 区域2是主编辑器，左边的代码片段更新时，右边的AST也会实时更新。代码片段需要符合所有语言的语法规范。例如对于java在结构上必须要有类声明。</p><p>​ 如果您在AST中选择一个节点，它的特定属性也将显示在面板（1）中：这些属性是节点的XPath属性。稍后会详细介绍。</p><p>​ 区域（3）是XPath编辑器。如果您在该区域输入一个XPath查询，它将在当前的AST上进行处理，并将结果显示在右下角的列表中。</p><h2 id="规则开发过程" tabindex="-1"><a class="header-anchor" href="#规则开发过程" aria-hidden="true">#</a> 规则开发过程</h2><p>基本的开发流程非常简单：</p><ol><li>在主编辑器中编写一个包含您要查找的有问题代码的代码片段。</li><li>检查AST并确定应该报告违规的节点。</li><li>在XPath编辑器中编写匹配该节点的XPath表达式。</li><li>使用不同的代码片段迭代地细化XPath表达式，使其匹配违规案例，但不匹配其他节点。</li><li>将您的XPath表达式导出为XML规则元素，并将其放入您的规则集。</li></ol><p>每次针对不同的代码片段测试您的规则时，最好保存它以创建测试案例。</p><p>在接下来的章节中，我们将通过几个示例来逐步完善规则。</p><h3 id="一个简单的规则" tabindex="-1"><a class="header-anchor" href="#一个简单的规则" aria-hidden="true">#</a> 一个简单的规则</h3><p>​ 假设您想阻止您的编码团队以您的老板名字（Bill）来命名 short 类型的变量。您可以尝试在以下有问题的代码片段上使用规则设计器：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">KeepingItSerious</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">short</span> bill<span class="token punctuation">;</span> <span class="token comment">// LocalVariableDeclaration</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 检查AST后，您发现<code>LocalVariableDeclaration</code>有一个<code>VariableDeclaratorId</code>后代，其<code>Name</code> XPath 属性确切为 <code>bill</code>。因此，您在XPath编辑器中编写了第一次尝试的XPath表达式：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>//VariableDeclaratorId[@Name = &quot;bill&quot;]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>​ 您可以看到XPath结果列表已经更新，显示了变量声明符。但是，如果您尝试针对以下更新的代码片段运行查询，您会发现字段声明的标识也被匹配，尽管它不是 short 类型的。</p><p>（注意：您可能在后续提供的示例或问题中需要更多的上下文信息才能得到更详细的帮助。）</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>public class KeepingItSerious {

    Delegator bill; // FieldDeclaration

    public void method() {
        short bill; // LocalVariableDeclaration
    }

}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 因此，您可以根据字段和局部变量声明节点的类型节点（Type node）的检查，通过添加附加的谓词来进一步完善您的XPath表达式。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>//VariableDeclaratorId[@Name = &quot;bill&quot; and ../../PrimitiveType/@Kind = &quot;short&quot;]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="导出xml" tabindex="-1"><a class="header-anchor" href="#导出xml" aria-hidden="true">#</a> 导出xml</h3><p>点击下图红框中的按钮即可导出规则信息，导出时还需要添加一些附加描述信息。</p><p><img src="`+u+`" alt="image-20231101185402204"></p><p>将xml内容复制下来就可以得到以下内容：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>FirstRule<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>java<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">message</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>First Rule Test<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>net.sourceforge.pmd.lang.rule.XPathRule<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>
some description
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>priority</span><span class="token punctuation">&gt;</span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>priority</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>version<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3.1<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>xpath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>
<span class="token cdata">&lt;![CDATA[
//VariableDeclaratorId[@Name = &quot;bill&quot; and ../../PrimitiveType/@Kind = &quot;short&quot;]

]]&gt;</span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rule</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 您可以注意到，您的XPath表达式最终被包含在一个XPathRule类型的规则的属性中，这是XPath规则的实现方式。</p>`,30);function b(x,_){const s=l("ExternalLinkIcon");return p(),i("div",null,[d,v,m,a("p",null,[n("​ 使用规则设计器既有助于编写Java规则，也有助于编写XPath规则，但更适合用于XPath规则设计。这使用一个简单的XPath规则来说明下常见的规则定义流程。我们假设您已经了解XPath是什么以及如何阅读基本的XPath查询。如果您不了解，W3C 在这里提供了一个关于XML的好"),a("a",k,[n("教程"),t(s)]),n("，而"),a("a",h,[n("Saxon文档"),t(s)]),n("详细但易于理解地描述了XPath表达式语法。")]),g])}const P=e(r,[["render",b],["__file","2第一个规则.html.vue"]]);export{P as default};
