import{_ as l,r as s,o as i,c as o,a as t,d as e,e as r,b as n}from"./app-26a5a8f2.js";const d={},c=n(`<h1 id="一-pmd-check-问题检测" tabindex="-1"><a class="header-anchor" href="#一-pmd-check-问题检测" aria-hidden="true">#</a> 一 pmd check （问题检测）</h1><h2 id="_1-调用指令" tabindex="-1"><a class="header-anchor" href="#_1-调用指令" aria-hidden="true">#</a> 1 调用指令</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pmd check ^
-R D:\\PMD-Test\\pmd-rule\\BuildInRule.xml ^
-d D:\\PMD-Test\\source-code\\pmd-build-in-rule ^
--cache D:\\PMD-Test\\pmd-cache\\cache.txt ^
-f sarif ^
-r D:\\PMD-Test\\pmd-report-sarif.json ^
--aux-classpath C:\\Users\\cxf\\.m2\\repository\\com\\guicedee\\services\\sl4j ^
-e:UTF-8 ^
--no-fail-on-violation ^
--force-language java ^
--use-version  java10 ^
--minimum-priority 3
--show-suppressed
-t: 2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>^:windows cmd中的命令换行符号。</p><p>-R：指定检测规则文件。</p><p>-d: 源文件目录或者源文件zip包。</p><p>--cache： pmd缓存文件。</p><p>-f: 报告格式。sarif格式是符合OASIS标准的基于JSON的静态分析结果交换格式。</p><p>-r : 报告存放位置，具体到文件名。</p><p>--aux-classpath：源码依赖库路径，多个用符号(在Linux上为“:”，在Windows上为“;”)分隔</p><p>-e: 源文件字符编码，默认UTF-8</p><p>--no-fail-on-violation：发现问题继续分析，直到结束</p><p>--force-language： 指定分析语言，不自动推断语言。</p><p>--use-version： 使用语言的版本。</p><p>--minimum-priority： 低于该等级问题不检测。</p><p>-P： 定义报告生成器参数。</p><p>--show-suppressed：报告中显示被忽略的问题。</p><p>-t ：PMD开启的线程数，0表示禁止多线程分析。</p>`,18),h={href:"https://docs.pmd-code.org/latest/pmd_userdocs_cli_reference.html",target:"_blank",rel:"noopener noreferrer"},g=n(`<h2 id="_2-规则文件-pmd内置规则" tabindex="-1"><a class="header-anchor" href="#_2-规则文件-pmd内置规则" aria-hidden="true">#</a> 2 规则文件(PMD内置规则)</h2><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot;?&gt;</span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ruleset</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Custom Rules<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://pmd.sourceforge.net/ruleset/2.0.0<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>
        My custom rules
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>

	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>category/java/bestpractices.xml<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>category/java/codestyle.xml<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>category/java/design.xml<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>category/java/documentation.xml<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>category/java/errorprone.xml<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>category/java/multithreading.xml<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>category/java/performance.xml<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>category/java/security.xml<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ruleset</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-内置规则列表-272条" tabindex="-1"><a class="header-anchor" href="#_3-内置规则列表-272条" aria-hidden="true">#</a> 3 内置规则列表(272条)</h2>`,3),y={href:"https://docs.pmd-code.org/latest/pmd_rules_java.html",target:"_blank",rel:"noopener noreferrer"},p=n(`<h3 id="_3-1-最佳实践类-50条" tabindex="-1"><a class="header-anchor" href="#_3-1-最佳实践类-50条" aria-hidden="true">#</a> 3.1 最佳实践类(50条)</h3><h4 id="_1-category-java-bestpractices-xml-abstractclasswithoutabstractmethod" tabindex="-1"><a class="header-anchor" href="#_1-category-java-bestpractices-xml-abstractclasswithoutabstractmethod" aria-hidden="true">#</a> 1) category/java/bestpractices.xml/AbstractClassWithoutAbstractMethod</h4><h4 id="_2-category-java-bestpractices-xml-accessorclassgeneration" tabindex="-1"><a class="header-anchor" href="#_2-category-java-bestpractices-xml-accessorclassgeneration" aria-hidden="true">#</a> 2) category/java/bestpractices.xml/AccessorClassGeneration</h4><h4 id="_3-category-java-bestpractices-xml-accessormethodgeneration" tabindex="-1"><a class="header-anchor" href="#_3-category-java-bestpractices-xml-accessormethodgeneration" aria-hidden="true">#</a> 3) category/java/bestpractices.xml/AccessorMethodGeneration</h4><h4 id="_4-category-java-bestpractices-xml-arrayisstoreddirectly" tabindex="-1"><a class="header-anchor" href="#_4-category-java-bestpractices-xml-arrayisstoreddirectly" aria-hidden="true">#</a> 4) category/java/bestpractices.xml/ArrayIsStoredDirectly</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">allowPrivate</td><td style="text-align:left;">true</td><td style="text-align:left;">如果为真，则允许私有方法/构造函数直接存储数组。</td></tr></tbody></table><h4 id="_5-category-java-bestpractices-xml-avoidmessagedigestfield" tabindex="-1"><a class="header-anchor" href="#_5-category-java-bestpractices-xml-avoidmessagedigestfield" aria-hidden="true">#</a> 5) category/java/bestpractices.xml/AvoidMessageDigestField</h4><h4 id="_6-category-java-bestpractices-xml-avoidprintstacktrace" tabindex="-1"><a class="header-anchor" href="#_6-category-java-bestpractices-xml-avoidprintstacktrace" aria-hidden="true">#</a> 6) category/java/bestpractices.xml/AvoidPrintStackTrace</h4><h4 id="_7-category-java-bestpractices-xml-avoidreassigningcatchvariables" tabindex="-1"><a class="header-anchor" href="#_7-category-java-bestpractices-xml-avoidreassigningcatchvariables" aria-hidden="true">#</a> 7) category/java/bestpractices.xml/AvoidReassigningCatchVariables</h4><h4 id="_8-category-java-bestpractices-xml-avoidreassigningloopvariables" tabindex="-1"><a class="header-anchor" href="#_8-category-java-bestpractices-xml-avoidreassigningloopvariables" aria-hidden="true">#</a> 8) category/java/bestpractices.xml/AvoidReassigningLoopVariables</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">foreachReassign</td><td style="text-align:left;">deny</td><td style="text-align:left;">如何/是否可以重新分配foreach控制变量。</td></tr><tr><td style="text-align:left;">forReassign</td><td style="text-align:left;">deny</td><td style="text-align:left;">如何/是否可以重新分配for循环控制变量。</td></tr></tbody></table><h4 id="_9-category-java-bestpractices-xml-avoidreassigningparameters" tabindex="-1"><a class="header-anchor" href="#_9-category-java-bestpractices-xml-avoidreassigningparameters" aria-hidden="true">#</a> 9) category/java/bestpractices.xml/AvoidReassigningParameters</h4><h4 id="_10-category-java-bestpractices-xml-avoidstringbufferfield" tabindex="-1"><a class="header-anchor" href="#_10-category-java-bestpractices-xml-avoidstringbufferfield" aria-hidden="true">#</a> 10) category/java/bestpractices.xml/AvoidStringBufferField</h4><h4 id="_11-category-java-bestpractices-xml-avoidusinghardcodedip" tabindex="-1"><a class="header-anchor" href="#_11-category-java-bestpractices-xml-avoidusinghardcodedip" aria-hidden="true">#</a> 11) category/java/bestpractices.xml/AvoidUsingHardCodedIP</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">checkAddressTypes</td><td style="text-align:left;">IPv4 , IPv6 , IPv4 mapped IPv6</td><td style="text-align:left;">Check for IP address types.</td></tr></tbody></table><h4 id="_12-category-java-bestpractices-xml-checkresultset" tabindex="-1"><a class="header-anchor" href="#_12-category-java-bestpractices-xml-checkresultset" aria-hidden="true">#</a> 12) category/java/bestpractices.xml/CheckResultSet</h4><h4 id="_13-category-java-bestpractices-xml-constantsininterface" tabindex="-1"><a class="header-anchor" href="#_13-category-java-bestpractices-xml-constantsininterface" aria-hidden="true">#</a> 13) category/java/bestpractices.xml/ConstantsInInterface</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">ignoreIfHasMethods</td><td style="text-align:left;">true</td><td style="text-align:left;">是否在定义了方法的接口里面忽略常量。</td></tr></tbody></table><h4 id="_14-category-java-bestpractices-xml-defaultlabelnotlastinswitchstmt" tabindex="-1"><a class="header-anchor" href="#_14-category-java-bestpractices-xml-defaultlabelnotlastinswitchstmt" aria-hidden="true">#</a> 14) category/java/bestpractices.xml/DefaultLabelNotLastInSwitchStmt</h4><h4 id="_15-category-java-bestpractices-xml-doublebraceinitialization" tabindex="-1"><a class="header-anchor" href="#_15-category-java-bestpractices-xml-doublebraceinitialization" aria-hidden="true">#</a> 15) category/java/bestpractices.xml/DoubleBraceInitialization</h4><h4 id="_16-category-java-bestpractices-xml-forloopcanbeforeach" tabindex="-1"><a class="header-anchor" href="#_16-category-java-bestpractices-xml-forloopcanbeforeach" aria-hidden="true">#</a> 16) category/java/bestpractices.xml/ForLoopCanBeForeach</h4><h4 id="_17-category-java-bestpractices-xml-forloopvariablecount" tabindex="-1"><a class="header-anchor" href="#_17-category-java-bestpractices-xml-forloopvariablecount" aria-hidden="true">#</a> 17) category/java/bestpractices.xml/ForLoopVariableCount</h4><table><thead><tr><th style="text-align:left;">描述参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">maximumVariables</td><td style="text-align:left;">1</td><td style="text-align:left;">一个常规的<code>for</code>语句应该只有一个控制变量。</td></tr></tbody></table><h4 id="_18-category-java-bestpractices-xml-guardlogstatement" tabindex="-1"><a class="header-anchor" href="#_18-category-java-bestpractices-xml-guardlogstatement" aria-hidden="true">#</a> 18) category/java/bestpractices.xml/GuardLogStatement</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">logLevels</td><td style="text-align:left;">trace , debug , info , warn , error , log , finest , finer , fine , info , warning , severe</td><td style="text-align:left;">日志保护级别</td></tr><tr><td style="text-align:left;">guardsMethods</td><td style="text-align:left;">isTraceEnabled , isDebugEnabled , isInfoEnabled , isWarnEnabled , isErrorEnabled , isLoggable</td><td style="text-align:left;">用于保护日志语句的方法。</td></tr></tbody></table><h4 id="_19-category-java-bestpractices-xml-junit4suitesshouldusesuiteannotation" tabindex="-1"><a class="header-anchor" href="#_19-category-java-bestpractices-xml-junit4suitesshouldusesuiteannotation" aria-hidden="true">#</a> 19) category/java/bestpractices.xml/JUnit4SuitesShouldUseSuiteAnnotation</h4><h4 id="_20-category-java-bestpractices-xml-junit4testshoulduseafterannotation" tabindex="-1"><a class="header-anchor" href="#_20-category-java-bestpractices-xml-junit4testshoulduseafterannotation" aria-hidden="true">#</a> 20) category/java/bestpractices.xml/JUnit4TestShouldUseAfterAnnotation</h4><h4 id="_21-category-java-bestpractices-xml-junit4testshouldusebeforeannotation" tabindex="-1"><a class="header-anchor" href="#_21-category-java-bestpractices-xml-junit4testshouldusebeforeannotation" aria-hidden="true">#</a> 21) category/java/bestpractices.xml/JUnit4TestShouldUseBeforeAnnotation</h4><h4 id="_22-category-java-bestpractices-xml-junit4testshouldusetestannotation" tabindex="-1"><a class="header-anchor" href="#_22-category-java-bestpractices-xml-junit4testshouldusetestannotation" aria-hidden="true">#</a> 22) category/java/bestpractices.xml/JUnit4TestShouldUseTestAnnotation</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">testClassPattern</td><td style="text-align:left;">Test</td><td style="text-align:left;">用于识别测试类的正则表达式模式。</td></tr></tbody></table><h4 id="_23-category-java-bestpractices-xml-junit5testshouldbepackageprivate" tabindex="-1"><a class="header-anchor" href="#_23-category-java-bestpractices-xml-junit5testshouldbepackageprivate" aria-hidden="true">#</a> 23) category/java/bestpractices.xml/JUnit5TestShouldBePackagePrivate</h4><h4 id="_24-category-java-bestpractices-xml-junitassertionsshouldincludemessage" tabindex="-1"><a class="header-anchor" href="#_24-category-java-bestpractices-xml-junitassertionsshouldincludemessage" aria-hidden="true">#</a> 24) category/java/bestpractices.xml/JUnitAssertionsShouldIncludeMessage</h4><h4 id="_25-category-java-bestpractices-xml-junittestcontainstoomanyasserts" tabindex="-1"><a class="header-anchor" href="#_25-category-java-bestpractices-xml-junittestcontainstoomanyasserts" aria-hidden="true">#</a> 25) category/java/bestpractices.xml/JUnitTestContainsTooManyAsserts</h4><h4 id="_26-category-java-bestpractices-xml-junittestsshouldincludeassert" tabindex="-1"><a class="header-anchor" href="#_26-category-java-bestpractices-xml-junittestsshouldincludeassert" aria-hidden="true">#</a> 26) category/java/bestpractices.xml/JUnitTestsShouldIncludeAssert</h4><h4 id="_27-category-java-bestpractices-xml-junituseexpected" tabindex="-1"><a class="header-anchor" href="#_27-category-java-bestpractices-xml-junituseexpected" aria-hidden="true">#</a> 27) category/java/bestpractices.xml/JUnitUseExpected</h4><h4 id="_28-category-java-bestpractices-xml-literalsfirstincomparisons" tabindex="-1"><a class="header-anchor" href="#_28-category-java-bestpractices-xml-literalsfirstincomparisons" aria-hidden="true">#</a> 28) category/java/bestpractices.xml/LiteralsFirstInComparisons</h4><h4 id="_29-category-java-bestpractices-xml-loosecoupling" tabindex="-1"><a class="header-anchor" href="#_29-category-java-bestpractices-xml-loosecoupling" aria-hidden="true">#</a> 29) category/java/bestpractices.xml/LooseCoupling</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">allowedTypes</td><td style="text-align:left;">java.util.Properties</td><td style="text-align:left;">规则的例外情况。</td></tr></tbody></table><h4 id="_30-category-java-bestpractices-xml-methodreturnsinternalarray" tabindex="-1"><a class="header-anchor" href="#_30-category-java-bestpractices-xml-methodreturnsinternalarray" aria-hidden="true">#</a> 30) category/java/bestpractices.xml/MethodReturnsInternalArray</h4><h4 id="_31-category-java-bestpractices-xml-missingoverride" tabindex="-1"><a class="header-anchor" href="#_31-category-java-bestpractices-xml-missingoverride" aria-hidden="true">#</a> 31) category/java/bestpractices.xml/MissingOverride</h4><h4 id="_32-category-java-bestpractices-xml-onedeclarationperline" tabindex="-1"><a class="header-anchor" href="#_32-category-java-bestpractices-xml-onedeclarationperline" aria-hidden="true">#</a> 32) category/java/bestpractices.xml/OneDeclarationPerLine</h4><h4 id="_33-category-java-bestpractices-xml-preservestacktrace" tabindex="-1"><a class="header-anchor" href="#_33-category-java-bestpractices-xml-preservestacktrace" aria-hidden="true">#</a> 33) category/java/bestpractices.xml/PreserveStackTrace</h4><h4 id="_34-category-java-bestpractices-xml-primitivewrapperinstantiation" tabindex="-1"><a class="header-anchor" href="#_34-category-java-bestpractices-xml-primitivewrapperinstantiation" aria-hidden="true">#</a> 34) category/java/bestpractices.xml/PrimitiveWrapperInstantiation</h4><h4 id="_35-category-java-bestpractices-xml-replaceenumerationwithiterator" tabindex="-1"><a class="header-anchor" href="#_35-category-java-bestpractices-xml-replaceenumerationwithiterator" aria-hidden="true">#</a> 35) category/java/bestpractices.xml/ReplaceEnumerationWithIterator</h4><h4 id="_36-category-java-bestpractices-xml-replacehashtablewithmap" tabindex="-1"><a class="header-anchor" href="#_36-category-java-bestpractices-xml-replacehashtablewithmap" aria-hidden="true">#</a> 36) category/java/bestpractices.xml/ReplaceHashtableWithMap</h4><h4 id="_37-category-java-bestpractices-xml-replacevectorwithlist" tabindex="-1"><a class="header-anchor" href="#_37-category-java-bestpractices-xml-replacevectorwithlist" aria-hidden="true">#</a> 37) category/java/bestpractices.xml/ReplaceVectorWithList</h4><h4 id="_38-category-java-bestpractices-xml-simplifiabletestassertion" tabindex="-1"><a class="header-anchor" href="#_38-category-java-bestpractices-xml-simplifiabletestassertion" aria-hidden="true">#</a> 38) category/java/bestpractices.xml/SimplifiableTestAssertion</h4><h4 id="_39-category-java-bestpractices-xml-switchstmtsshouldhavedefault" tabindex="-1"><a class="header-anchor" href="#_39-category-java-bestpractices-xml-switchstmtsshouldhavedefault" aria-hidden="true">#</a> 39) category/java/bestpractices.xml/SwitchStmtsShouldHaveDefault</h4><h4 id="_40-category-java-bestpractices-xml-systemprintln" tabindex="-1"><a class="header-anchor" href="#_40-category-java-bestpractices-xml-systemprintln" aria-hidden="true">#</a> 40) category/java/bestpractices.xml/SystemPrintln</h4><h4 id="_41-category-java-bestpractices-xml-unusedassignment" tabindex="-1"><a class="header-anchor" href="#_41-category-java-bestpractices-xml-unusedassignment" aria-hidden="true">#</a> 41) category/java/bestpractices.xml/UnusedAssignment</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">checkUnusedPrefixIncrement</td><td style="text-align:left;">false</td><td style="text-align:left;">报告类似 ++i 的表达式，这些表达式可以被替换为 (i + 1)</td></tr><tr><td style="text-align:left;">reportUnusedVariables</td><td style="text-align:left;">false</td><td style="text-align:left;">报告仅被初始化而从未被读取的变量。规则UnusedVariable已经关注了这一点，但如果需要，你可以启用它。</td></tr></tbody></table><h4 id="_42-category-java-bestpractices-xml-unusedformalparameter" tabindex="-1"><a class="header-anchor" href="#_42-category-java-bestpractices-xml-unusedformalparameter" aria-hidden="true">#</a> 42) category/java/bestpractices.xml/UnusedFormalParameter</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">checkAll</td><td style="text-align:left;">false</td><td style="text-align:left;">检查所有方法，包括非私有方法。</td></tr></tbody></table><h4 id="_43-category-java-bestpractices-xml-unusedlocalvariable" tabindex="-1"><a class="header-anchor" href="#_43-category-java-bestpractices-xml-unusedlocalvariable" aria-hidden="true">#</a> 43) category/java/bestpractices.xml/UnusedLocalVariable</h4><h4 id="_44-category-java-bestpractices-xml-unusedprivatefield" tabindex="-1"><a class="header-anchor" href="#_44-category-java-bestpractices-xml-unusedprivatefield" aria-hidden="true">#</a> 44) category/java/bestpractices.xml/UnusedPrivateField</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">ignoredFieldNames</td><td style="text-align:left;">serialVersionUID , serialPersistentFields</td><td style="text-align:left;">被忽略不进行未使用检查的字段名称。</td></tr><tr><td style="text-align:left;">reportForAnnotations</td><td style="text-align:left;"></td><td style="text-align:left;">应报告的注解类型的完全限定名称。如果一个未使用的字段有这些注解之一，则会报告。如果它有任何其他注解，则仍然被视为已使用，不会报告。</td></tr></tbody></table><h4 id="_45-category-java-bestpractices-xml-unusedprivatemethod" tabindex="-1"><a class="header-anchor" href="#_45-category-java-bestpractices-xml-unusedprivatemethod" aria-hidden="true">#</a> 45) category/java/bestpractices.xml/UnusedPrivateMethod</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">ignoredAnnotations</td><td style="text-align:left;">java.lang.Deprecated</td><td style="text-align:left;">此规则应忽略的注解类型的完全限定名称。</td></tr></tbody></table><h4 id="_46-category-java-bestpractices-xml-usecollectionisempty" tabindex="-1"><a class="header-anchor" href="#_46-category-java-bestpractices-xml-usecollectionisempty" aria-hidden="true">#</a> 46) category/java/bestpractices.xml/UseCollectionIsEmpty</h4><h4 id="_47-category-java-bestpractices-xml-usestandardcharsets" tabindex="-1"><a class="header-anchor" href="#_47-category-java-bestpractices-xml-usestandardcharsets" aria-hidden="true">#</a> 47) category/java/bestpractices.xml/UseStandardCharsets</h4><h4 id="_48-category-java-bestpractices-xml-usetrywithresources" tabindex="-1"><a class="header-anchor" href="#_48-category-java-bestpractices-xml-usetrywithresources" aria-hidden="true">#</a> 48) category/java/bestpractices.xml/UseTryWithResources</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">closeMethods</td><td style="text-align:left;">close , closeQuietly</td><td style="text-align:left;">在 finally 块中触发此规则的方法名称。</td></tr></tbody></table><h4 id="_49-category-java-bestpractices-xml-usevarargs" tabindex="-1"><a class="header-anchor" href="#_49-category-java-bestpractices-xml-usevarargs" aria-hidden="true">#</a> 49) category/java/bestpractices.xml/UseVarargs</h4><h4 id="_50-category-java-bestpractices-xml-whileloopwithliteralboolean" tabindex="-1"><a class="header-anchor" href="#_50-category-java-bestpractices-xml-whileloopwithliteralboolean" aria-hidden="true">#</a> 50) category/java/bestpractices.xml/WhileLoopWithLiteralBoolean</h4><h3 id="_3-2-代码风格-54条" tabindex="-1"><a class="header-anchor" href="#_3-2-代码风格-54条" aria-hidden="true">#</a> 3.2 代码风格(54条)</h3><h4 id="_1-category-java-codestyle-xml-atleastoneconstructor" tabindex="-1"><a class="header-anchor" href="#_1-category-java-codestyle-xml-atleastoneconstructor" aria-hidden="true">#</a> 1) category/java/codestyle.xml/AtLeastOneConstructor</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">ignoredAnnotations</td><td style="text-align:left;">lombok.Data , lombok.Value , lombok.Builder , lombok.NoArgsConstructor , lombok.RequiredArgsConstructor , lombok.AllArgsConstructor</td><td style="text-align:left;">此规则应忽略的注解类型的完全限定名称。</td></tr></tbody></table><h4 id="_1-category-java-codestyle-xml-avoiddollarsigns" tabindex="-1"><a class="header-anchor" href="#_1-category-java-codestyle-xml-avoiddollarsigns" aria-hidden="true">#</a> 1) category/java/codestyle.xml/AvoidDollarSigns</h4><h4 id="_2-category-java-codestyle-xml-avoidprotectedfieldinfinalclass" tabindex="-1"><a class="header-anchor" href="#_2-category-java-codestyle-xml-avoidprotectedfieldinfinalclass" aria-hidden="true">#</a> 2) category/java/codestyle.xml/AvoidProtectedFieldInFinalClass</h4><h4 id="_3-category-java-codestyle-xml-avoidprotectedmethodinfinalclassnotextending" tabindex="-1"><a class="header-anchor" href="#_3-category-java-codestyle-xml-avoidprotectedmethodinfinalclassnotextending" aria-hidden="true">#</a> 3) category/java/codestyle.xml/AvoidProtectedMethodInFinalClassNotExtending</h4><h4 id="_4-category-java-codestyle-xml-avoidusingnativecode" tabindex="-1"><a class="header-anchor" href="#_4-category-java-codestyle-xml-avoidusingnativecode" aria-hidden="true">#</a> 4) category/java/codestyle.xml/AvoidUsingNativeCode</h4><h4 id="_5-category-java-codestyle-xml-booleangetmethodname" tabindex="-1"><a class="header-anchor" href="#_5-category-java-codestyle-xml-booleangetmethodname" aria-hidden="true">#</a> 5) category/java/codestyle.xml/BooleanGetMethodName</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">checkParameterizedMethods</td><td style="text-align:left;">false</td><td style="text-align:left;">检查参数化的方法。</td></tr></tbody></table><h4 id="_6-category-java-codestyle-xml-callsuperinconstructor" tabindex="-1"><a class="header-anchor" href="#_6-category-java-codestyle-xml-callsuperinconstructor" aria-hidden="true">#</a> 6) category/java/codestyle.xml/CallSuperInConstructor</h4><h4 id="_7-category-java-codestyle-xml-classnamingconventions" tabindex="-1"><a class="header-anchor" href="#_7-category-java-codestyle-xml-classnamingconventions" aria-hidden="true">#</a> 7) category/java/codestyle.xml/ClassNamingConventions</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">classPattern</td><td style="text-align:left;">[A-Z][a-zA-Z0-9]*</td><td style="text-align:left;">适用于具体类名称的正则表达式。</td></tr><tr><td style="text-align:left;">abstractClassPattern</td><td style="text-align:left;">[A-Z][a-zA-Z0-9]*</td><td style="text-align:left;">适用于抽象类名称的正则表达式。</td></tr><tr><td style="text-align:left;">interfacePattern</td><td style="text-align:left;">[A-Z][a-zA-Z0-9]*</td><td style="text-align:left;">适用于接口名称的正则表达式。</td></tr><tr><td style="text-align:left;">enumPattern</td><td style="text-align:left;">[A-Z][a-zA-Z0-9]*</td><td style="text-align:left;">适用于枚举类型名称的正则表达式。</td></tr><tr><td style="text-align:left;">annotationPattern</td><td style="text-align:left;">[A-Z][a-zA-Z0-9]*</td><td style="text-align:left;">适用于注解名称的正则表达式。</td></tr><tr><td style="text-align:left;">utilityClassPattern</td><td style="text-align:left;">[A-Z][a-zA-Z0-9]*</td><td style="text-align:left;">适用于实用类（utility class）名称的正则表达式。</td></tr><tr><td style="text-align:left;">testClassPattern</td><td style="text-align:left;">^Test.*$|^[A-Z][a-zA-Z0-9]*Test(s|Case)?$</td><td style="text-align:left;">适用于测试类名称的正则表达式。自 PMD 6.52.0 起。</td></tr></tbody></table><h4 id="_8-category-java-codestyle-xml-commentdefaultaccessmodifier" tabindex="-1"><a class="header-anchor" href="#_8-category-java-codestyle-xml-commentdefaultaccessmodifier" aria-hidden="true">#</a> 8) category/java/codestyle.xml/CommentDefaultAccessModifier</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">ignoredAnnotations</td><td style="text-align:left;">android.support.annotation.VisibleForTesting , co.elastic.clients.util.VisibleForTesting , com.google.common.annotations.VisibleForTesting , org.junit.jupiter.api.AfterAll , org.junit.jupiter.api.AfterEach , org.junit.jupiter.api.BeforeAll , org.junit.jupiter.api.BeforeEach , org.junit.jupiter.api.ParameterizedTest , org.junit.jupiter.api.RepeatedTest , org.junit.jupiter.api.Test , org.junit.jupiter.api.TestFactory , org.junit.jupiter.api.TestTemplate , org.junit.jupiter.api.extension.RegisterExtension , org.testng.annotations.AfterClass , org.testng.annotations.AfterGroups , org.testng.annotations.AfterMethod , org.testng.annotations.AfterSuite , org.testng.annotations.AfterTest , org.testng.annotations.BeforeClass , org.testng.annotations.BeforeGroups , org.testng.annotations.BeforeMethod , org.testng.annotations.BeforeSuite , org.testng.annotations.BeforeTest , org.testng.annotations.Test</td><td style="text-align:left;">这个规则应该忽略的注解类型的完全限定名称</td></tr><tr><td style="text-align:left;">regex</td><td style="text-align:left;">/*\\s*(default|package)\\s**/</td><td style="text-align:left;">正则表达式</td></tr><tr><td style="text-align:left;">checkTopLevelTypes</td><td style="text-align:left;">false</td><td style="text-align:left;">检查顶层类、注解和枚举中的默认访问修饰符。</td></tr></tbody></table><h4 id="_9-category-java-codestyle-xml-confusingternary" tabindex="-1"><a class="header-anchor" href="#_9-category-java-codestyle-xml-confusingternary" aria-hidden="true">#</a> 9) category/java/codestyle.xml/ConfusingTernary</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">ignoreElseIf</td><td style="text-align:left;">false</td><td style="text-align:left;">忽略带有 else-if 情况的条件。</td></tr></tbody></table><h4 id="_10-category-java-codestyle-xml-controlstatementbraces" tabindex="-1"><a class="header-anchor" href="#_10-category-java-codestyle-xml-controlstatementbraces" aria-hidden="true">#</a> 10) category/java/codestyle.xml/ControlStatementBraces</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">checkIfElseStmt</td><td style="text-align:left;">true</td><td style="text-align:left;">要求使用大括号来包裹 &#39;if ... else&#39; 语句</td></tr><tr><td style="text-align:left;">checkSingleIfStmt</td><td style="text-align:left;">true</td><td style="text-align:left;">要求 &#39;if&#39; 语句在只有一个分支的情况下使用大括号。</td></tr><tr><td style="text-align:left;">checkWhileStmt</td><td style="text-align:left;">true</td><td style="text-align:left;">要求 &#39;while&#39; 循环使用大括号。</td></tr><tr><td style="text-align:left;">checkForStmt</td><td style="text-align:left;">true</td><td style="text-align:left;">要求 &#39;for&#39; 循环应该使用大括号。</td></tr><tr><td style="text-align:left;">checkDoWhileStmt</td><td style="text-align:left;">true</td><td style="text-align:left;">要求 &#39;do ... while&#39; 循环使用大括号</td></tr><tr><td style="text-align:left;">checkCaseStmt</td><td style="text-align:left;">false</td><td style="text-align:left;">要求 switch 语句的各个 case 使用大括号。</td></tr><tr><td style="text-align:left;">allowEmptyLoop</td><td style="text-align:left;">false</td><td style="text-align:left;">允许带有空语句的循环，例如 &#39;while(true);&#39;。</td></tr></tbody></table><h4 id="_11-category-java-codestyle-xml-emptycontrolstatement" tabindex="-1"><a class="header-anchor" href="#_11-category-java-codestyle-xml-emptycontrolstatement" aria-hidden="true">#</a> 11) category/java/codestyle.xml/EmptyControlStatement</h4><h4 id="_12-category-java-codestyle-xml-emptymethodinabstractclassshouldbeabstract" tabindex="-1"><a class="header-anchor" href="#_12-category-java-codestyle-xml-emptymethodinabstractclassshouldbeabstract" aria-hidden="true">#</a> 12) category/java/codestyle.xml/EmptyMethodInAbstractClassShouldBeAbstract</h4><h4 id="_13-category-java-codestyle-xml-extendsobject" tabindex="-1"><a class="header-anchor" href="#_13-category-java-codestyle-xml-extendsobject" aria-hidden="true">#</a> 13) category/java/codestyle.xml/ExtendsObject</h4><h4 id="_14-category-java-codestyle-xml-fielddeclarationsshouldbeatstartofclass" tabindex="-1"><a class="header-anchor" href="#_14-category-java-codestyle-xml-fielddeclarationsshouldbeatstartofclass" aria-hidden="true">#</a> 14) category/java/codestyle.xml/FieldDeclarationsShouldBeAtStartOfClass</h4><table><thead><tr><th style="text-align:left;">参数名Name</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">ignoreAnonymousClassDeclarations</td><td style="text-align:left;">true</td><td style="text-align:left;">忽略使用匿名类创建表达式进行初始化的字段声明。</td></tr><tr><td style="text-align:left;">ignoreInterfaceDeclarations</td><td style="text-align:left;">false</td><td style="text-align:left;">忽略在字段之前声明的接口。</td></tr><tr><td style="text-align:left;">ignoreEnumDeclarations</td><td style="text-align:left;">true</td><td style="text-align:left;">忽略在字段之前声明的枚举类型。</td></tr></tbody></table><h4 id="_15-category-java-codestyle-xml-fieldnamingconventions" tabindex="-1"><a class="header-anchor" href="#_15-category-java-codestyle-xml-fieldnamingconventions" aria-hidden="true">#</a> 15) category/java/codestyle.xml/FieldNamingConventions</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">publicConstantPattern</td><td style="text-align:left;">[A-Z][A-Z_0-9]*</td><td style="text-align:left;">适用于公共常量名称的正则表达式。</td></tr><tr><td style="text-align:left;">constantPattern</td><td style="text-align:left;">[A-Z][A-Z_0-9]*</td><td style="text-align:left;">匹配‘’non-public static final‘字段名。</td></tr><tr><td style="text-align:left;">enumConstantPattern</td><td style="text-align:left;">[A-Z][A-Z_0-9]*</td><td style="text-align:left;">匹配枚举常量名。</td></tr><tr><td style="text-align:left;">finalFieldPattern</td><td style="text-align:left;">[a-z][a-zA-Z0-9]*</td><td style="text-align:left;">匹配final字段名称。</td></tr><tr><td style="text-align:left;">staticFieldPattern</td><td style="text-align:left;">[a-z][a-zA-Z0-9]*</td><td style="text-align:left;">适用于静态字段名称的正则表达式。</td></tr><tr><td style="text-align:left;">defaultFieldPattern</td><td style="text-align:left;">[a-z][a-zA-Z0-9]*</td><td style="text-align:left;">适用于字段名称的正则表达式。</td></tr><tr><td style="text-align:left;">exclusions</td><td style="text-align:left;">serialVersionUID , serialPersistentFields</td><td style="text-align:left;">要加入白名单的字段名称。</td></tr></tbody></table><h4 id="_16-category-java-codestyle-xml-finalparameterinabstractmethod" tabindex="-1"><a class="header-anchor" href="#_16-category-java-codestyle-xml-finalparameterinabstractmethod" aria-hidden="true">#</a> 16) category/java/codestyle.xml/FinalParameterInAbstractMethod</h4><h4 id="_17-category-java-codestyle-xml-forloopshouldbewhileloop" tabindex="-1"><a class="header-anchor" href="#_17-category-java-codestyle-xml-forloopshouldbewhileloop" aria-hidden="true">#</a> 17) category/java/codestyle.xml/ForLoopShouldBeWhileLoop</h4><h4 id="_18-category-java-codestyle-xml-formalparameternamingconventions" tabindex="-1"><a class="header-anchor" href="#_18-category-java-codestyle-xml-formalparameternamingconventions" aria-hidden="true">#</a> 18) category/java/codestyle.xml/FormalParameterNamingConventions</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">methodParameterPattern</td><td style="text-align:left;">[a-z][a-zA-Z0-9]*</td><td style="text-align:left;">Regex which applies to formal parameter names</td></tr><tr><td style="text-align:left;">finalMethodParameterPattern</td><td style="text-align:left;">[a-z][a-zA-Z0-9]*</td><td style="text-align:left;">Regex which applies to final formal parameter names</td></tr><tr><td style="text-align:left;">lambdaParameterPattern</td><td style="text-align:left;">[a-z][a-zA-Z0-9]*</td><td style="text-align:left;">Regex which applies to inferred-type lambda parameter names</td></tr><tr><td style="text-align:left;">explicitLambdaParameterPattern</td><td style="text-align:left;">[a-z][a-zA-Z0-9]*</td><td style="text-align:left;">Regex which applies to explicitly-typed lambda parameter names</td></tr></tbody></table><h4 id="_19-category-java-codestyle-xml-genericsnaming" tabindex="-1"><a class="header-anchor" href="#_19-category-java-codestyle-xml-genericsnaming" aria-hidden="true">#</a> 19) category/java/codestyle.xml/GenericsNaming</h4><h4 id="_20-category-java-codestyle-xml-identicalcatchbranches" tabindex="-1"><a class="header-anchor" href="#_20-category-java-codestyle-xml-identicalcatchbranches" aria-hidden="true">#</a> 20) category/java/codestyle.xml/IdenticalCatchBranches</h4><h4 id="_21-category-java-codestyle-xml-linguisticnaming" tabindex="-1"><a class="header-anchor" href="#_21-category-java-codestyle-xml-linguisticnaming" aria-hidden="true">#</a> 21) category/java/codestyle.xml/LinguisticNaming</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">ignoredAnnotations</td><td style="text-align:left;">java.lang.Override</td><td style="text-align:left;">该规则应忽略的注解类型的完全限定名称。</td></tr><tr><td style="text-align:left;">checkBooleanMethod</td><td style="text-align:left;">true</td><td style="text-align:left;">检查方法名称和类型以查找不一致的命名。</td></tr><tr><td style="text-align:left;">checkGetters</td><td style="text-align:left;">true</td><td style="text-align:left;">检查 getter 方法的返回类型。</td></tr><tr><td style="text-align:left;">checkSetters</td><td style="text-align:left;">true</td><td style="text-align:left;">检查 setter 方法的返回类型。</td></tr><tr><td style="text-align:left;">checkPrefixedTransformMethods</td><td style="text-align:left;">true</td><td style="text-align:left;">检查以配置的前缀开头的方法的返回类型（参见 transformMethodNames 属性）。</td></tr><tr><td style="text-align:left;">checkTransformMethods</td><td style="text-align:left;">false</td><td style="text-align:left;">检查在其名称中包含配置的中缀的方法的返回类型（参见 transformMethodNames 属性）。</td></tr><tr><td style="text-align:left;">booleanMethodPrefixes</td><td style="text-align:left;">is , has , can , have , will , should</td><td style="text-align:left;">返回布尔值的方法的前缀。</td></tr><tr><td style="text-align:left;">transformMethodNames</td><td style="text-align:left;">to , as</td><td style="text-align:left;">指示转换方法的前缀和中缀。</td></tr><tr><td style="text-align:left;">checkFields</td><td style="text-align:left;">true</td><td style="text-align:left;">检查字段名称和类型以查找不一致的命名。</td></tr><tr><td style="text-align:left;">checkVariables</td><td style="text-align:left;">true</td><td style="text-align:left;">检查局部变量的名称和类型以查找不一致的命名。</td></tr><tr><td style="text-align:left;">booleanFieldPrefixes</td><td style="text-align:left;">is , has , can , have , will , should</td><td style="text-align:left;">指示布尔类型的字段和变量的前缀。</td></tr></tbody></table><h4 id="_22-category-java-codestyle-xml-localhomenamingconvention" tabindex="-1"><a class="header-anchor" href="#_22-category-java-codestyle-xml-localhomenamingconvention" aria-hidden="true">#</a> 22) category/java/codestyle.xml/LocalHomeNamingConvention</h4><h4 id="_23-category-java-codestyle-xml-localinterfacesessionnamingconvention" tabindex="-1"><a class="header-anchor" href="#_23-category-java-codestyle-xml-localinterfacesessionnamingconvention" aria-hidden="true">#</a> 23) category/java/codestyle.xml/LocalInterfaceSessionNamingConvention</h4><h4 id="_24-category-java-codestyle-xml-localvariablecouldbefinal" tabindex="-1"><a class="header-anchor" href="#_24-category-java-codestyle-xml-localvariablecouldbefinal" aria-hidden="true">#</a> 24) category/java/codestyle.xml/LocalVariableCouldBeFinal</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">ignoreForEachDecl</td><td style="text-align:left;">false</td><td style="text-align:left;">在 for-each 语句中忽略非最终的循环变量。</td></tr></tbody></table><h4 id="_25-category-java-codestyle-xml-localvariablenamingconventions" tabindex="-1"><a class="header-anchor" href="#_25-category-java-codestyle-xml-localvariablenamingconventions" aria-hidden="true">#</a> 25) category/java/codestyle.xml/LocalVariableNamingConventions</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">localVarPattern</td><td style="text-align:left;">[a-z][a-zA-Z0-9]*</td><td style="text-align:left;">匹配’‘non-final local’变量名</td></tr><tr><td style="text-align:left;">finalVarPattern</td><td style="text-align:left;">[a-z][a-zA-Z0-9]*</td><td style="text-align:left;">匹配“final local”变量名</td></tr><tr><td style="text-align:left;">catchParameterPattern</td><td style="text-align:left;">[a-z][a-zA-Z0-9]*</td><td style="text-align:left;">匹配“exception block”参数名</td></tr></tbody></table><h4 id="_26-category-java-codestyle-xml-longvariable" tabindex="-1"><a class="header-anchor" href="#_26-category-java-codestyle-xml-longvariable" aria-hidden="true">#</a> 26) category/java/codestyle.xml/LongVariable</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">minimum</td><td style="text-align:left;">17</td><td style="text-align:left;">变量长度报告的阈值。</td></tr></tbody></table><h4 id="_27-category-java-codestyle-xml-mdbandsessionbeannamingconvention" tabindex="-1"><a class="header-anchor" href="#_27-category-java-codestyle-xml-mdbandsessionbeannamingconvention" aria-hidden="true">#</a> 27) category/java/codestyle.xml/MDBAndSessionBeanNamingConvention</h4><h4 id="_28-category-java-codestyle-xml-methodargumentcouldbefinal" tabindex="-1"><a class="header-anchor" href="#_28-category-java-codestyle-xml-methodargumentcouldbefinal" aria-hidden="true">#</a> 28) category/java/codestyle.xml/MethodArgumentCouldBeFinal</h4><h4 id="_29-category-java-codestyle-xml-methodnamingconventions" tabindex="-1"><a class="header-anchor" href="#_29-category-java-codestyle-xml-methodnamingconventions" aria-hidden="true">#</a> 29) category/java/codestyle.xml/MethodNamingConventions</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">methodPattern</td><td style="text-align:left;">[a-z][a-zA-Z0-9]*</td><td style="text-align:left;">匹配“instance method”名称的正则表达式</td></tr><tr><td style="text-align:left;">staticPattern</td><td style="text-align:left;">[a-z][a-zA-Z0-9]*</td><td style="text-align:left;">匹配“static method”名称的正则表达式</td></tr><tr><td style="text-align:left;">nativePattern</td><td style="text-align:left;">[a-z][a-zA-Z0-9]*</td><td style="text-align:left;">匹配“native method”名称的正则表达式</td></tr><tr><td style="text-align:left;">junit3TestPattern</td><td style="text-align:left;">test[A-Z0-9][a-zA-Z0-9]*</td><td style="text-align:left;">匹配“JUnit 3 test method”名称的正则表达式</td></tr><tr><td style="text-align:left;">junit4TestPattern</td><td style="text-align:left;">[a-z][a-zA-Z0-9]*</td><td style="text-align:left;">匹配“JUnit 4 test method”名称的正则表达式</td></tr><tr><td style="text-align:left;">junit5TestPattern</td><td style="text-align:left;">[a-z][a-zA-Z0-9]*</td><td style="text-align:left;">匹配“ JUnit 5 test method”名称的正则表达式</td></tr></tbody></table><h4 id="_30-category-java-codestyle-xml-nopackage" tabindex="-1"><a class="header-anchor" href="#_30-category-java-codestyle-xml-nopackage" aria-hidden="true">#</a> 30) category/java/codestyle.xml/NoPackage</h4><h4 id="_31-category-java-codestyle-xml-onlyonereturn" tabindex="-1"><a class="header-anchor" href="#_31-category-java-codestyle-xml-onlyonereturn" aria-hidden="true">#</a> 31) category/java/codestyle.xml/OnlyOneReturn</h4><h4 id="_32-category-java-codestyle-xml-packagecase" tabindex="-1"><a class="header-anchor" href="#_32-category-java-codestyle-xml-packagecase" aria-hidden="true">#</a> 32) category/java/codestyle.xml/PackageCase</h4><h4 id="_33-category-java-codestyle-xml-prematuredeclaration" tabindex="-1"><a class="header-anchor" href="#_33-category-java-codestyle-xml-prematuredeclaration" aria-hidden="true">#</a> 33) category/java/codestyle.xml/PrematureDeclaration</h4><h4 id="_34-category-java-codestyle-xml-remoteinterfacenamingconvention" tabindex="-1"><a class="header-anchor" href="#_34-category-java-codestyle-xml-remoteinterfacenamingconvention" aria-hidden="true">#</a> 34) category/java/codestyle.xml/RemoteInterfaceNamingConvention</h4><h4 id="_35-category-java-codestyle-xml-remotesessioninterfacenamingconvention" tabindex="-1"><a class="header-anchor" href="#_35-category-java-codestyle-xml-remotesessioninterfacenamingconvention" aria-hidden="true">#</a> 35) category/java/codestyle.xml/RemoteSessionInterfaceNamingConvention</h4><h4 id="_36-category-java-codestyle-xml-shortclassname" tabindex="-1"><a class="header-anchor" href="#_36-category-java-codestyle-xml-shortclassname" aria-hidden="true">#</a> 36) category/java/codestyle.xml/ShortClassName</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">minimum</td><td style="text-align:left;">5</td><td style="text-align:left;">类名最低要求的字符数。</td></tr></tbody></table><h4 id="_37-category-java-codestyle-xml-shortmethodname" tabindex="-1"><a class="header-anchor" href="#_37-category-java-codestyle-xml-shortmethodname" aria-hidden="true">#</a> 37) category/java/codestyle.xml/ShortMethodName</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">minimum</td><td style="text-align:left;">3</td><td style="text-align:left;">方法名最低要求的字符数。</td></tr></tbody></table><h4 id="_38-category-java-codestyle-xml-shortvariable" tabindex="-1"><a class="header-anchor" href="#_38-category-java-codestyle-xml-shortvariable" aria-hidden="true">#</a> 38) category/java/codestyle.xml/ShortVariable</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Default Value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">minimum</td><td style="text-align:left;">3</td><td style="text-align:left;">变量名最低要求的字符数。</td></tr></tbody></table><h4 id="_39-category-java-codestyle-xml-toomanystaticimports" tabindex="-1"><a class="header-anchor" href="#_39-category-java-codestyle-xml-toomanystaticimports" aria-hidden="true">#</a> 39) category/java/codestyle.xml/TooManyStaticImports</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">maximumStaticImports</td><td style="text-align:left;">4</td><td style="text-align:left;">通过将此设置为 0，可以禁止所有静态导入。</td></tr></tbody></table><h4 id="_40-category-java-codestyle-xml-unnecessaryannotationvalueelement" tabindex="-1"><a class="header-anchor" href="#_40-category-java-codestyle-xml-unnecessaryannotationvalueelement" aria-hidden="true">#</a> 40) category/java/codestyle.xml/UnnecessaryAnnotationValueElement</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">java7Compatibility</td><td style="text-align:left;">false</td><td style="text-align:left;">如果禁用，规则还会显示适用于 Java 8 及更高版本的违规。</td></tr></tbody></table><h4 id="_41-category-java-codestyle-xml-unnecessaryboxing" tabindex="-1"><a class="header-anchor" href="#_41-category-java-codestyle-xml-unnecessaryboxing" aria-hidden="true">#</a> 41) category/java/codestyle.xml/UnnecessaryBoxing</h4><h4 id="_42-category-java-codestyle-xml-unnecessarycast" tabindex="-1"><a class="header-anchor" href="#_42-category-java-codestyle-xml-unnecessarycast" aria-hidden="true">#</a> 42) category/java/codestyle.xml/UnnecessaryCast</h4><h4 id="_43-category-java-codestyle-xml-unnecessaryconstructor" tabindex="-1"><a class="header-anchor" href="#_43-category-java-codestyle-xml-unnecessaryconstructor" aria-hidden="true">#</a> 43) category/java/codestyle.xml/UnnecessaryConstructor</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">ignoredAnnotations</td><td style="text-align:left;">javax.inject.Inject , com.google.inject.Inject , org.springframework.beans.factory.annotation.Autowired</td><td style="text-align:left;">该规则应该忽略的注解类型的完全限定名称。</td></tr></tbody></table><h4 id="_44-category-java-codestyle-xml-unnecessaryfullyqualifiedname" tabindex="-1"><a class="header-anchor" href="#_44-category-java-codestyle-xml-unnecessaryfullyqualifiedname" aria-hidden="true">#</a> 44) category/java/codestyle.xml/UnnecessaryFullyQualifiedName</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">reportStaticMethods</td><td style="text-align:left;">true</td><td style="text-align:left;">报告不必要的静态方法限定符，例如 <code>Collections.emptyList()</code>，如果该方法已被导入或继承。</td></tr><tr><td style="text-align:left;">reportStaticFields</td><td style="text-align:left;">true</td><td style="text-align:left;">报告不必要的静态字段限定符，例如 <code>Math.PI</code>，如果该字段已被导入或继承。</td></tr></tbody></table><h4 id="_45-category-java-codestyle-xml-unnecessaryimport" tabindex="-1"><a class="header-anchor" href="#_45-category-java-codestyle-xml-unnecessaryimport" aria-hidden="true">#</a> 45) category/java/codestyle.xml/UnnecessaryImport</h4><h4 id="_46-category-java-codestyle-xml-unnecessarylocalbeforereturn" tabindex="-1"><a class="header-anchor" href="#_46-category-java-codestyle-xml-unnecessarylocalbeforereturn" aria-hidden="true">#</a> 46) category/java/codestyle.xml/UnnecessaryLocalBeforeReturn</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">statementOrderMatters</td><td style="text-align:left;">true</td><td style="text-align:left;">如果设置为 false，则该规则不再要求变量声明和返回语句在连续的行上。任何仅在返回语句中使用的变量都将被报告。</td></tr></tbody></table><h4 id="_47-category-java-codestyle-xml-unnecessarymodifier" tabindex="-1"><a class="header-anchor" href="#_47-category-java-codestyle-xml-unnecessarymodifier" aria-hidden="true">#</a> 47) category/java/codestyle.xml/UnnecessaryModifier</h4><h4 id="_48-category-java-codestyle-xml-unnecessaryreturn" tabindex="-1"><a class="header-anchor" href="#_48-category-java-codestyle-xml-unnecessaryreturn" aria-hidden="true">#</a> 48) category/java/codestyle.xml/UnnecessaryReturn</h4><h4 id="_49-category-java-codestyle-xml-unnecessarysemicolon" tabindex="-1"><a class="header-anchor" href="#_49-category-java-codestyle-xml-unnecessarysemicolon" aria-hidden="true">#</a> 49) category/java/codestyle.xml/UnnecessarySemicolon</h4><h4 id="_50-category-java-codestyle-xml-usediamondoperator" tabindex="-1"><a class="header-anchor" href="#_50-category-java-codestyle-xml-usediamondoperator" aria-hidden="true">#</a> 50) category/java/codestyle.xml/UseDiamondOperator</h4><h4 id="_51-category-java-codestyle-xml-uselessparentheses" tabindex="-1"><a class="header-anchor" href="#_51-category-java-codestyle-xml-uselessparentheses" aria-hidden="true">#</a> 51) category/java/codestyle.xml/UselessParentheses</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;"></th></tr></thead><tbody><tr><td style="text-align:left;">ignoreClarifying</td><td style="text-align:left;">true</td><td style="text-align:left;">忽略括号，这些括号分隔了不同优先级的表达式，例如 <code>(a % 2 == 0) ? x : -x</code>。</td></tr><tr><td style="text-align:left;">ignoreBalancing</td><td style="text-align:left;">true</td><td style="text-align:left;">忽略在等号运算符周围出现平衡的不必要括号，因为另一个操作数需要括号。例如，在 <code>(a == null) == (b == null)</code> 中，只有第二对括号是必要的，但这样表达式更清晰。</td></tr></tbody></table><h4 id="_52-category-java-codestyle-xml-uselessqualifiedthis" tabindex="-1"><a class="header-anchor" href="#_52-category-java-codestyle-xml-uselessqualifiedthis" aria-hidden="true">#</a> 52) category/java/codestyle.xml/UselessQualifiedThis</h4><h4 id="_53-category-java-codestyle-xml-useshortarrayinitializer" tabindex="-1"><a class="header-anchor" href="#_53-category-java-codestyle-xml-useshortarrayinitializer" aria-hidden="true">#</a> 53) category/java/codestyle.xml/UseShortArrayInitializer</h4><h4 id="_54-category-java-codestyle-xml-useunderscoresinnumericliterals" tabindex="-1"><a class="header-anchor" href="#_54-category-java-codestyle-xml-useunderscoresinnumericliterals" aria-hidden="true">#</a> 54) category/java/codestyle.xml/UseUnderscoresInNumericLiterals</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">acceptableDecimalLength</td><td style="text-align:left;">4</td><td style="text-align:left;">不要求在十进制下使用下划线的字面值的长度。</td></tr></tbody></table><h3 id="_3-3-设计类-42条" tabindex="-1"><a class="header-anchor" href="#_3-3-设计类-42条" aria-hidden="true">#</a> 3.3 设计类(42条)</h3><h4 id="_1-category-java-design-xml-abstractclasswithoutanymethod" tabindex="-1"><a class="header-anchor" href="#_1-category-java-design-xml-abstractclasswithoutanymethod" aria-hidden="true">#</a> 1) category/java/design.xml/AbstractClassWithoutAnyMethod</h4><h4 id="_2-category-java-design-xml-avoidcatchinggenericexception" tabindex="-1"><a class="header-anchor" href="#_2-category-java-design-xml-avoidcatchinggenericexception" aria-hidden="true">#</a> 2) category/java/design.xml/AvoidCatchingGenericException</h4><h4 id="_3-category-java-design-xml-avoiddeeplynestedifstmts" tabindex="-1"><a class="header-anchor" href="#_3-category-java-design-xml-avoiddeeplynestedifstmts" aria-hidden="true">#</a> 3) category/java/design.xml/AvoidDeeplyNestedIfStmts</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">problemDepth</td><td style="text-align:left;">3</td><td style="text-align:left;">if 语句深度报告的阈值。</td></tr></tbody></table><h4 id="_4-category-java-design-xml-avoidrethrowingexception" tabindex="-1"><a class="header-anchor" href="#_4-category-java-design-xml-avoidrethrowingexception" aria-hidden="true">#</a> 4) category/java/design.xml/AvoidRethrowingException</h4><h4 id="_5-category-java-design-xml-avoidthrowingnewinstanceofsameexception" tabindex="-1"><a class="header-anchor" href="#_5-category-java-design-xml-avoidthrowingnewinstanceofsameexception" aria-hidden="true">#</a> 5) category/java/design.xml/AvoidThrowingNewInstanceOfSameException</h4><h4 id="_6-category-java-design-xml-avoidthrowingnullpointerexception" tabindex="-1"><a class="header-anchor" href="#_6-category-java-design-xml-avoidthrowingnullpointerexception" aria-hidden="true">#</a> 6) category/java/design.xml/AvoidThrowingNullPointerException</h4><h4 id="_7-category-java-design-xml-avoidthrowingrawexceptiontypes" tabindex="-1"><a class="header-anchor" href="#_7-category-java-design-xml-avoidthrowingrawexceptiontypes" aria-hidden="true">#</a> 7) category/java/design.xml/AvoidThrowingRawExceptionTypes</h4><h4 id="_8-category-java-design-xml-avoiduncheckedexceptionsinsignatures" tabindex="-1"><a class="header-anchor" href="#_8-category-java-design-xml-avoiduncheckedexceptionsinsignatures" aria-hidden="true">#</a> 8) category/java/design.xml/AvoidUncheckedExceptionsInSignatures</h4><h4 id="_9-category-java-design-xml-classwithonlyprivateconstructorsshouldbefinal" tabindex="-1"><a class="header-anchor" href="#_9-category-java-design-xml-classwithonlyprivateconstructorsshouldbefinal" aria-hidden="true">#</a> 9) category/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal</h4><h4 id="_10-category-java-design-xml-cognitivecomplexity" tabindex="-1"><a class="header-anchor" href="#_10-category-java-design-xml-cognitivecomplexity" aria-hidden="true">#</a> 10) category/java/design.xml/CognitiveComplexity</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">reportLevel</td><td style="text-align:left;">15</td><td style="text-align:left;">认知复杂性报告的阈值。</td></tr></tbody></table><h4 id="_11-category-java-design-xml-collapsibleifstatements" tabindex="-1"><a class="header-anchor" href="#_11-category-java-design-xml-collapsibleifstatements" aria-hidden="true">#</a> 11) category/java/design.xml/CollapsibleIfStatements</h4><h4 id="_12-category-java-design-xml-couplingbetweenobjects" tabindex="-1"><a class="header-anchor" href="#_12-category-java-design-xml-couplingbetweenobjects" aria-hidden="true">#</a> 12) category/java/design.xml/CouplingBetweenObjects</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">threshold</td><td style="text-align:left;">20</td><td style="text-align:left;">唯一类型报告的阈值。</td></tr></tbody></table><h4 id="_13-category-java-design-xml-cyclomaticcomplexity" tabindex="-1"><a class="header-anchor" href="#_13-category-java-design-xml-cyclomaticcomplexity" aria-hidden="true">#</a> 13) category/java/design.xml/CyclomaticComplexity</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">classReportLevel</td><td style="text-align:left;">80</td><td style="text-align:left;">总类复杂性报告的阈值。</td></tr><tr><td style="text-align:left;">methodReportLevel</td><td style="text-align:left;">10</td><td style="text-align:left;">圈复杂度报告的阈值。</td></tr><tr><td style="text-align:left;">cycloOptions</td><td style="text-align:left;"></td><td style="text-align:left;">选择计算圈复杂度的选项。</td></tr></tbody></table><h4 id="_14-category-java-design-xml-dataclass" tabindex="-1"><a class="header-anchor" href="#_14-category-java-design-xml-dataclass" aria-hidden="true">#</a> 14) category/java/design.xml/DataClass</h4><h4 id="_15-category-java-design-xml-donotextendjavalangerror" tabindex="-1"><a class="header-anchor" href="#_15-category-java-design-xml-donotextendjavalangerror" aria-hidden="true">#</a> 15) category/java/design.xml/DoNotExtendJavaLangError</h4><h4 id="_16-category-java-design-xml-exceptionasflowcontrol" tabindex="-1"><a class="header-anchor" href="#_16-category-java-design-xml-exceptionasflowcontrol" aria-hidden="true">#</a> 16) category/java/design.xml/ExceptionAsFlowControl</h4><h4 id="_17-category-java-design-xml-excessiveimports" tabindex="-1"><a class="header-anchor" href="#_17-category-java-design-xml-excessiveimports" aria-hidden="true">#</a> 17) category/java/design.xml/ExcessiveImports</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">minimum</td><td style="text-align:left;">30</td><td style="text-align:left;">报告节点的阈值。</td></tr></tbody></table><h4 id="_18-category-java-design-xml-excessivemethodlength" tabindex="-1"><a class="header-anchor" href="#_18-category-java-design-xml-excessivemethodlength" aria-hidden="true">#</a> 18) category/java/design.xml/ExcessiveMethodLength</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">minimum</td><td style="text-align:left;">100</td><td style="text-align:left;">上报节点的阈值。</td></tr></tbody></table><h4 id="_19-category-java-design-xml-excessiveparameterlist" tabindex="-1"><a class="header-anchor" href="#_19-category-java-design-xml-excessiveparameterlist" aria-hidden="true">#</a> 19) category/java/design.xml/ExcessiveParameterList</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">minimum</td><td style="text-align:left;">10</td><td style="text-align:left;">报告节点的阈值。</td></tr></tbody></table><h4 id="_20-category-java-design-xml-excessivepubliccount" tabindex="-1"><a class="header-anchor" href="#_20-category-java-design-xml-excessivepubliccount" aria-hidden="true">#</a> 20) category/java/design.xml/ExcessivePublicCount</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">minimum</td><td style="text-align:left;">45</td><td style="text-align:left;">报告节点的阈值。</td></tr></tbody></table><h4 id="_21-category-java-design-xml-finalfieldcouldbestatic" tabindex="-1"><a class="header-anchor" href="#_21-category-java-design-xml-finalfieldcouldbestatic" aria-hidden="true">#</a> 21) category/java/design.xml/FinalFieldCouldBeStatic</h4><h4 id="_22-category-java-design-xml-godclass" tabindex="-1"><a class="header-anchor" href="#_22-category-java-design-xml-godclass" aria-hidden="true">#</a> 22) category/java/design.xml/GodClass</h4><h4 id="_23-category-java-design-xml-immutablefield" tabindex="-1"><a class="header-anchor" href="#_23-category-java-design-xml-immutablefield" aria-hidden="true">#</a> 23) category/java/design.xml/ImmutableField</h4><h4 id="_24-category-java-design-xml-invalidjavabean" tabindex="-1"><a class="header-anchor" href="#_24-category-java-design-xml-invalidjavabean" aria-hidden="true">#</a> 24) category/java/design.xml/InvalidJavaBean</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">ensureSerialization</td><td style="text-align:left;">false</td><td style="text-align:left;">要求 bean 实现 java.io.Serializable。</td></tr><tr><td style="text-align:left;">packages</td><td style="text-align:left;">org.example.beans</td><td style="text-align:left;">只考虑这些包中的类作为 bean。将其设置为空值以检查所有类。</td></tr></tbody></table><h4 id="_25-category-java-design-xml-lawofdemeter" tabindex="-1"><a class="header-anchor" href="#_25-category-java-design-xml-lawofdemeter" aria-hidden="true">#</a> 25) category/java/design.xml/LawOfDemeter</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">trustRadius</td><td style="text-align:left;">1</td><td style="text-align:left;">受信任数据的最大程度。默认值为1，是最严格的。</td></tr></tbody></table><h4 id="_26-category-java-design-xml-logicinversion" tabindex="-1"><a class="header-anchor" href="#_26-category-java-design-xml-logicinversion" aria-hidden="true">#</a> 26) category/java/design.xml/LogicInversion</h4><h4 id="_27-category-java-design-xml-loosepackagecoupling" tabindex="-1"><a class="header-anchor" href="#_27-category-java-design-xml-loosepackagecoupling" aria-hidden="true">#</a> 27) category/java/design.xml/LoosePackageCoupling</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">packages</td><td style="text-align:left;"></td><td style="text-align:left;">受限制的包。</td></tr><tr><td style="text-align:left;">classes</td><td style="text-align:left;"></td><td style="text-align:left;">允许的类。</td></tr></tbody></table><h4 id="_28-category-java-design-xml-mutablestaticstate" tabindex="-1"><a class="header-anchor" href="#_28-category-java-design-xml-mutablestaticstate" aria-hidden="true">#</a> 28) category/java/design.xml/MutableStaticState</h4><h4 id="_29-category-java-design-xml-ncsscount" tabindex="-1"><a class="header-anchor" href="#_29-category-java-design-xml-ncsscount" aria-hidden="true">#</a> 29) category/java/design.xml/NcssCount</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">methodReportLevel</td><td style="text-align:left;">60</td><td style="text-align:left;">方法的 NCSS（Non-Commented Source Statements，非注释源语句）报告阈值。</td></tr><tr><td style="text-align:left;">classReportLevel</td><td style="text-align:left;">1500</td><td style="text-align:left;">类的 NCSS（Non-Commented Source Statements，非注释源语句）报告阈值。</td></tr><tr><td style="text-align:left;">ncssOptions</td><td style="text-align:left;"></td><td style="text-align:left;">选择计算 NCSS 的选项。</td></tr></tbody></table><h4 id="_30-category-java-design-xml-npathcomplexity" tabindex="-1"><a class="header-anchor" href="#_30-category-java-design-xml-npathcomplexity" aria-hidden="true">#</a> 30) category/java/design.xml/NPathComplexity</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">reportLevel</td><td style="text-align:left;">200</td><td style="text-align:left;">N-Path 复杂度报告的阈值。</td></tr></tbody></table><h4 id="_31-category-java-design-xml-signaturedeclarethrowsexception" tabindex="-1"><a class="header-anchor" href="#_31-category-java-design-xml-signaturedeclarethrowsexception" aria-hidden="true">#</a> 31) category/java/design.xml/SignatureDeclareThrowsException</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">IgnoreJUnitCompletely</td><td style="text-align:left;">false</td><td style="text-align:left;">允许在 JUnit3 的 TestCase 中的所有方法抛出异常。</td></tr></tbody></table><h4 id="_32-category-java-design-xml-simplifiedternary" tabindex="-1"><a class="header-anchor" href="#_32-category-java-design-xml-simplifiedternary" aria-hidden="true">#</a> 32) category/java/design.xml/SimplifiedTernary</h4><h4 id="_33-category-java-design-xml-simplifybooleanexpressions" tabindex="-1"><a class="header-anchor" href="#_33-category-java-design-xml-simplifybooleanexpressions" aria-hidden="true">#</a> 33) category/java/design.xml/SimplifyBooleanExpressions</h4><h4 id="_34-category-java-design-xml-simplifybooleanreturns" tabindex="-1"><a class="header-anchor" href="#_34-category-java-design-xml-simplifybooleanreturns" aria-hidden="true">#</a> 34) category/java/design.xml/SimplifyBooleanReturns</h4><h4 id="_35-category-java-design-xml-simplifyconditional" tabindex="-1"><a class="header-anchor" href="#_35-category-java-design-xml-simplifyconditional" aria-hidden="true">#</a> 35) category/java/design.xml/SimplifyConditional</h4><h4 id="_36-category-java-design-xml-singularfield" tabindex="-1"><a class="header-anchor" href="#_36-category-java-design-xml-singularfield" aria-hidden="true">#</a> 36) category/java/design.xml/SingularField</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">ignoredAnnotations</td><td style="text-align:left;">java.lang.Deprecated , javafx.fxml.FXML , lombok.Getter , lombok.Setter , lombok.experimental.Delegate</td><td style="text-align:left;">该规则应忽略的注解类型的完全限定名称。</td></tr></tbody></table><h4 id="_37-category-java-design-xml-switchdensity" tabindex="-1"><a class="header-anchor" href="#_37-category-java-design-xml-switchdensity" aria-hidden="true">#</a> 37) category/java/design.xml/SwitchDensity</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">minimum</td><td style="text-align:left;">10</td><td style="text-align:left;">报告 switch 语句或表达式的阈值。</td></tr></tbody></table><h4 id="_38-category-java-design-xml-toomanyfields" tabindex="-1"><a class="header-anchor" href="#_38-category-java-design-xml-toomanyfields" aria-hidden="true">#</a> 38) category/java/design.xml/TooManyFields</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">maxfields</td><td style="text-align:left;">15</td><td style="text-align:left;">允许的最大字段数。</td></tr></tbody></table><h4 id="_39-category-java-design-xml-toomanymethods" tabindex="-1"><a class="header-anchor" href="#_39-category-java-design-xml-toomanymethods" aria-hidden="true">#</a> 39) category/java/design.xml/TooManyMethods</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">maxmethods</td><td style="text-align:left;">10</td><td style="text-align:left;">方法计数报告的阈值。</td></tr></tbody></table><h4 id="_40-category-java-design-xml-uselessoverridingmethod" tabindex="-1"><a class="header-anchor" href="#_40-category-java-design-xml-uselessoverridingmethod" aria-hidden="true">#</a> 40) category/java/design.xml/UselessOverridingMethod</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">ignoreAnnotations</td><td style="text-align:left;">false</td><td style="text-align:left;">忽略具有注解的方法（除了 @Override）。</td></tr></tbody></table><h4 id="_41-category-java-design-xml-useobjectforclearerapi" tabindex="-1"><a class="header-anchor" href="#_41-category-java-design-xml-useobjectforclearerapi" aria-hidden="true">#</a> 41) category/java/design.xml/UseObjectForClearerAPI</h4><h4 id="_42-category-java-design-xml-useutilityclass" tabindex="-1"><a class="header-anchor" href="#_42-category-java-design-xml-useutilityclass" aria-hidden="true">#</a> 42) category/java/design.xml/UseUtilityClass</h4><h3 id="_3-4-文档类-5条" tabindex="-1"><a class="header-anchor" href="#_3-4-文档类-5条" aria-hidden="true">#</a> 3.4 文档类(5条)</h3><h4 id="_1-category-java-documentation-xml-commentcontent" tabindex="-1"><a class="header-anchor" href="#_1-category-java-documentation-xml-commentcontent" aria-hidden="true">#</a> 1) category/java/documentation.xml/CommentContent</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">forbiddenRegex</td><td style="text-align:left;">idiot|jerk</td><td style="text-align:left;">非法的术语或短语。</td></tr></tbody></table><h4 id="_2-category-java-documentation-xml-commentrequired" tabindex="-1"><a class="header-anchor" href="#_2-category-java-documentation-xml-commentrequired" aria-hidden="true">#</a> 2) category/java/documentation.xml/CommentRequired</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">methodWithOverrideCommentRequirement</td><td style="text-align:left;">Ignored</td><td style="text-align:left;">对 @Override 方法的注释。可能的取值：[Required（必需），Ignored（忽略），Unwanted（不需要）]。</td></tr><tr><td style="text-align:left;">accessorCommentRequirement</td><td style="text-align:left;">Ignored</td><td style="text-align:left;">对于 getters 和 setters 的注释。可能的取值：[Required（必需），Ignored（忽略），Unwanted（不需要）]。</td></tr><tr><td style="text-align:left;">classCommentRequirement</td><td style="text-align:left;">Required</td><td style="text-align:left;">类的注释。可能的取值：[Required（必需），Ignored（忽略），Unwanted（不需要）]。</td></tr><tr><td style="text-align:left;">headerCommentRequirement</td><td style="text-align:left;">Required</td><td style="text-align:left;">已弃用的头部注释。请使用属性 &quot;classCommentRequired&quot; 代替。可能的取值：[Required（必需），Ignored（忽略），Unwanted（不需要）]。</td></tr><tr><td style="text-align:left;">fieldCommentRequirement</td><td style="text-align:left;">Required</td><td style="text-align:left;">字段注释。可能的取值：[Required（必需），Ignored（忽略），Unwanted（不需要）]。</td></tr><tr><td style="text-align:left;">publicMethodCommentRequirement</td><td style="text-align:left;">Required</td><td style="text-align:left;">公共方法和构造函数的注释。可能的取值：[Required（必需），Ignored（忽略），Unwanted（不需要）]。</td></tr><tr><td style="text-align:left;">protectedMethodCommentRequirement</td><td style="text-align:left;">Required</td><td style="text-align:left;">受保护的方法和构造函数的注释。可能的取值：[Required（必需），Ignored（忽略），Unwanted（不需要）]。</td></tr><tr><td style="text-align:left;">enumCommentRequirement</td><td style="text-align:left;">Required</td><td style="text-align:left;">枚举类型的注释。可能的取值：[Required（必需），Ignored（忽略），Unwanted（不需要）]。</td></tr><tr><td style="text-align:left;">serialVersionUIDCommentRequired</td><td style="text-align:left;">Ignored</td><td style="text-align:left;">序列化版本 UID 的注释。可能的取值：[Required（必需），Ignored（忽略），Unwanted（不需要）]。</td></tr><tr><td style="text-align:left;">serialPersistentFieldsCommentRequired</td><td style="text-align:left;">Ignored</td><td style="text-align:left;">序列化持久字段的注释。可能的取值：[Required（必需），Ignored（忽略），Unwanted（不需要）]。</td></tr></tbody></table><h4 id="_3-category-java-documentation-xml-commentsize" tabindex="-1"><a class="header-anchor" href="#_3-category-java-documentation-xml-commentsize" aria-hidden="true">#</a> 3) category/java/documentation.xml/CommentSize</h4><h4 id="_4-category-java-documentation-xml-uncommentedemptyconstructor" tabindex="-1"><a class="header-anchor" href="#_4-category-java-documentation-xml-uncommentedemptyconstructor" aria-hidden="true">#</a> 4) category/java/documentation.xml/UncommentedEmptyConstructor</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">Default Value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">ignoreExplicitConstructorInvocation</td><td style="text-align:left;">false</td><td style="text-align:left;">在决定构造函数是否为空时，忽略显式的构造函数调用。</td></tr></tbody></table><h4 id="_5-category-java-documentation-xml-uncommentedemptymethodbody" tabindex="-1"><a class="header-anchor" href="#_5-category-java-documentation-xml-uncommentedemptymethodbody" aria-hidden="true">#</a> 5) category/java/documentation.xml/UncommentedEmptyMethodBody</h4><h3 id="_3-5-错误倾向类-85条" tabindex="-1"><a class="header-anchor" href="#_3-5-错误倾向类-85条" aria-hidden="true">#</a> 3.5 错误倾向类(85条)</h3><h4 id="_1-category-java-errorprone-xml-assignmentinoperand" tabindex="-1"><a class="header-anchor" href="#_1-category-java-errorprone-xml-assignmentinoperand" aria-hidden="true">#</a> 1）category/java/errorprone.xml/AssignmentInOperand</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">allowIf</td><td style="text-align:left;">false</td><td style="text-align:left;">允许在 if 语句的条件表达式中进行赋值。</td></tr><tr><td style="text-align:left;">allowFor</td><td style="text-align:left;">false</td><td style="text-align:left;">允许在 for 语句的条件表达式中进行赋值。</td></tr><tr><td style="text-align:left;">allowWhile</td><td style="text-align:left;">false</td><td style="text-align:left;">允许在 while 语句的条件表达式中进行赋值。</td></tr><tr><td style="text-align:left;">allowIncrementDecrement</td><td style="text-align:left;">false</td><td style="text-align:left;">允许在 if、for 或 while 语句的条件表达式中使用递增或递减操作符。</td></tr></tbody></table><h4 id="_2-category-java-errorprone-xml-assignmenttononfinalstatic" tabindex="-1"><a class="header-anchor" href="#_2-category-java-errorprone-xml-assignmenttononfinalstatic" aria-hidden="true">#</a> 2）category/java/errorprone.xml/AssignmentToNonFinalStatic</h4><h4 id="_3-category-java-errorprone-xml-avoidaccessibilityalteration" tabindex="-1"><a class="header-anchor" href="#_3-category-java-errorprone-xml-avoidaccessibilityalteration" aria-hidden="true">#</a> 3）category/java/errorprone.xml/AvoidAccessibilityAlteration</h4><h4 id="_4-category-java-errorprone-xml-avoidassertasidentifier" tabindex="-1"><a class="header-anchor" href="#_4-category-java-errorprone-xml-avoidassertasidentifier" aria-hidden="true">#</a> 4）category/java/errorprone.xml/AvoidAssertAsIdentifier</h4><h4 id="_5-category-java-errorprone-xml-avoidbranchingstatementaslastinloop" tabindex="-1"><a class="header-anchor" href="#_5-category-java-errorprone-xml-avoidbranchingstatementaslastinloop" aria-hidden="true">#</a> 5）category/java/errorprone.xml/AvoidBranchingStatementAsLastInLoop</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">checkBreakLoopTypes</td><td style="text-align:left;">for , do , while</td><td style="text-align:left;">要检查 break 语句的循环类型列表。</td></tr><tr><td style="text-align:left;">checkContinueLoopTypes</td><td style="text-align:left;">for , do , while</td><td style="text-align:left;">要检查 continue 语句的循环类型列表。</td></tr><tr><td style="text-align:left;">checkReturnLoopTypes</td><td style="text-align:left;">for , do , while</td><td style="text-align:left;">要检查 return 语句的循环类型列表。</td></tr></tbody></table><h4 id="_6-category-java-errorprone-xml-avoidcallingfinalize" tabindex="-1"><a class="header-anchor" href="#_6-category-java-errorprone-xml-avoidcallingfinalize" aria-hidden="true">#</a> 6）category/java/errorprone.xml/AvoidCallingFinalize</h4><h4 id="_7-category-java-errorprone-xml-avoidcatchingnpe" tabindex="-1"><a class="header-anchor" href="#_7-category-java-errorprone-xml-avoidcatchingnpe" aria-hidden="true">#</a> 7）category/java/errorprone.xml/AvoidCatchingNPE</h4><h4 id="_8-category-java-errorprone-xml-avoidcatchingthrowable" tabindex="-1"><a class="header-anchor" href="#_8-category-java-errorprone-xml-avoidcatchingthrowable" aria-hidden="true">#</a> 8）category/java/errorprone.xml/AvoidCatchingThrowable</h4><h4 id="_9-category-java-errorprone-xml-avoiddecimalliteralsinbigdecimalconstructor" tabindex="-1"><a class="header-anchor" href="#_9-category-java-errorprone-xml-avoiddecimalliteralsinbigdecimalconstructor" aria-hidden="true">#</a> 9）category/java/errorprone.xml/AvoidDecimalLiteralsInBigDecimalConstructor</h4><h4 id="_10-category-java-errorprone-xml-avoidduplicateliterals" tabindex="-1"><a class="header-anchor" href="#_10-category-java-errorprone-xml-avoidduplicateliterals" aria-hidden="true">#</a> 10）category/java/errorprone.xml/AvoidDuplicateLiterals</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">maxDuplicateLiterals</td><td style="text-align:left;">4</td><td style="text-align:left;">最大重复字面值数。</td></tr><tr><td style="text-align:left;">minimumLength</td><td style="text-align:left;">3</td><td style="text-align:left;">要检查的字符串的最小长度。</td></tr><tr><td style="text-align:left;">skipAnnotations</td><td style="text-align:left;">false</td><td style="text-align:left;">跳过注解中的字面值。</td></tr><tr><td style="text-align:left;">exceptionList</td><td style="text-align:left;"></td><td style="text-align:left;">要忽略的字面值列表。如果字面值的文本可以在此列表中找到，那么它将被忽略。此列表的组成部分不应该用双引号括起来。</td></tr></tbody></table><h4 id="_11-category-java-errorprone-xml-avoidenumasidentifier" tabindex="-1"><a class="header-anchor" href="#_11-category-java-errorprone-xml-avoidenumasidentifier" aria-hidden="true">#</a> 11）category/java/errorprone.xml/AvoidEnumAsIdentifier</h4><h4 id="_12-category-java-errorprone-xml-avoidfieldnamematchingmethodname" tabindex="-1"><a class="header-anchor" href="#_12-category-java-errorprone-xml-avoidfieldnamematchingmethodname" aria-hidden="true">#</a> 12）category/java/errorprone.xml/AvoidFieldNameMatchingMethodName</h4><h4 id="_13-category-java-errorprone-xml-avoidfieldnamematchingtypename" tabindex="-1"><a class="header-anchor" href="#_13-category-java-errorprone-xml-avoidfieldnamematchingtypename" aria-hidden="true">#</a> 13）category/java/errorprone.xml/AvoidFieldNameMatchingTypeName</h4><h4 id="_14-category-java-errorprone-xml-avoidinstanceofchecksincatchclause" tabindex="-1"><a class="header-anchor" href="#_14-category-java-errorprone-xml-avoidinstanceofchecksincatchclause" aria-hidden="true">#</a> 14）category/java/errorprone.xml/AvoidInstanceofChecksInCatchClause</h4><h4 id="_15-category-java-errorprone-xml-avoidliteralsinifcondition" tabindex="-1"><a class="header-anchor" href="#_15-category-java-errorprone-xml-avoidliteralsinifcondition" aria-hidden="true">#</a> 15）category/java/errorprone.xml/AvoidLiteralsInIfCondition</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">ignoreMagicNumbers</td><td style="text-align:left;">-1,0</td><td style="text-align:left;">要忽略的魔数（magic numbers）的逗号分隔列表。</td></tr><tr><td style="text-align:left;">ignoreExpressions</td><td style="text-align:left;">true</td><td style="text-align:left;">如果为 true，则仅考虑简单 if 条件中的字面值。否则，也会检查表达式中的字面值。</td></tr></tbody></table><h4 id="_16-category-java-errorprone-xml-avoidlosingexceptioninformation" tabindex="-1"><a class="header-anchor" href="#_16-category-java-errorprone-xml-avoidlosingexceptioninformation" aria-hidden="true">#</a> 16）category/java/errorprone.xml/AvoidLosingExceptionInformation</h4><h4 id="_17-category-java-errorprone-xml-avoidmultipleunaryoperators" tabindex="-1"><a class="header-anchor" href="#_17-category-java-errorprone-xml-avoidmultipleunaryoperators" aria-hidden="true">#</a> 17）category/java/errorprone.xml/AvoidMultipleUnaryOperators</h4><h4 id="_18-category-java-errorprone-xml-avoidusingoctalvalues" tabindex="-1"><a class="header-anchor" href="#_18-category-java-errorprone-xml-avoidusingoctalvalues" aria-hidden="true">#</a> 18）category/java/errorprone.xml/AvoidUsingOctalValues</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">strict</td><td style="text-align:left;">false</td><td style="text-align:left;">检测在 00 到 07 之间的违规。</td></tr></tbody></table><h4 id="_19-category-java-errorprone-xml-brokennullcheck" tabindex="-1"><a class="header-anchor" href="#_19-category-java-errorprone-xml-brokennullcheck" aria-hidden="true">#</a> 19）category/java/errorprone.xml/BrokenNullCheck</h4><h4 id="_20-category-java-errorprone-xml-callsuperfirst" tabindex="-1"><a class="header-anchor" href="#_20-category-java-errorprone-xml-callsuperfirst" aria-hidden="true">#</a> 20）category/java/errorprone.xml/CallSuperFirst</h4><h4 id="_21-category-java-errorprone-xml-callsuperlast" tabindex="-1"><a class="header-anchor" href="#_21-category-java-errorprone-xml-callsuperlast" aria-hidden="true">#</a> 21）category/java/errorprone.xml/CallSuperLast</h4><h4 id="_22-category-java-errorprone-xml-checkskipresult" tabindex="-1"><a class="header-anchor" href="#_22-category-java-errorprone-xml-checkskipresult" aria-hidden="true">#</a> 22）category/java/errorprone.xml/CheckSkipResult</h4><h4 id="_23-category-java-errorprone-xml-classcastexceptionwithtoarray" tabindex="-1"><a class="header-anchor" href="#_23-category-java-errorprone-xml-classcastexceptionwithtoarray" aria-hidden="true">#</a> 23）category/java/errorprone.xml/ClassCastExceptionWithToArray</h4><h4 id="_24-category-java-errorprone-xml-clonemethodmustbepublic" tabindex="-1"><a class="header-anchor" href="#_24-category-java-errorprone-xml-clonemethodmustbepublic" aria-hidden="true">#</a> 24）category/java/errorprone.xml/CloneMethodMustBePublic</h4><h4 id="_25-category-java-errorprone-xml-clonemethodmustimplementcloneable" tabindex="-1"><a class="header-anchor" href="#_25-category-java-errorprone-xml-clonemethodmustimplementcloneable" aria-hidden="true">#</a> 25）category/java/errorprone.xml/CloneMethodMustImplementCloneable</h4><h4 id="_26-category-java-errorprone-xml-clonemethodreturntypemustmatchclassname" tabindex="-1"><a class="header-anchor" href="#_26-category-java-errorprone-xml-clonemethodreturntypemustmatchclassname" aria-hidden="true">#</a> 26）category/java/errorprone.xml/CloneMethodReturnTypeMustMatchClassName</h4><h4 id="_27-category-java-errorprone-xml-closeresource" tabindex="-1"><a class="header-anchor" href="#_27-category-java-errorprone-xml-closeresource" aria-hidden="true">#</a> 27）category/java/errorprone.xml/CloseResource</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">closeTargets</td><td style="text-align:left;"></td><td style="text-align:left;">可能关闭此资源的方法。</td></tr><tr><td style="text-align:left;">types</td><td style="text-align:left;">java.lang.AutoCloseable , java.sql.Connection , java.sql.Statement , java.sql.ResultSet</td><td style="text-align:left;">受影响的类型。</td></tr><tr><td style="text-align:left;">closeAsDefaultTarget</td><td style="text-align:left;">true</td><td style="text-align:left;">默认将 &#39;close&#39; 视为目标。</td></tr><tr><td style="text-align:left;">allowedResourceTypes</td><td style="text-align:left;">java.io.ByteArrayOutputStream , java.io.ByteArrayInputStream , java.io.StringWriter , java.io.CharArrayWriter , java.util.stream.Stream , java.util.stream.IntStream , java.util.stream.LongStream , java.util.stream.DoubleStream</td><td style="text-align:left;">无需关闭的确切类名。</td></tr><tr><td style="text-align:left;">closeNotInFinally</td><td style="text-align:left;">false</td><td style="text-align:left;">检测在 finally 块之外调用 &#39;close&#39;（或其他 closeTargets）。</td></tr></tbody></table><h4 id="_28-category-java-errorprone-xml-compareobjectswithequals" tabindex="-1"><a class="header-anchor" href="#_28-category-java-errorprone-xml-compareobjectswithequals" aria-hidden="true">#</a> 28）category/java/errorprone.xml/CompareObjectsWithEquals</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">typesThatCompareByReference</td><td style="text-align:left;">java.lang.Enum , java.lang.Class</td><td style="text-align:left;">允许进行引用比较的规范类型名称列表。</td></tr></tbody></table><h4 id="_29-category-java-errorprone-xml-comparisonwithnan" tabindex="-1"><a class="header-anchor" href="#_29-category-java-errorprone-xml-comparisonwithnan" aria-hidden="true">#</a> 29）category/java/errorprone.xml/ComparisonWithNaN</h4><h4 id="_30-category-java-errorprone-xml-constructorcallsoverridablemethod" tabindex="-1"><a class="header-anchor" href="#_30-category-java-errorprone-xml-constructorcallsoverridablemethod" aria-hidden="true">#</a> 30）category/java/errorprone.xml/ConstructorCallsOverridableMethod</h4><h4 id="_31-category-java-errorprone-xml-detachedtestcase" tabindex="-1"><a class="header-anchor" href="#_31-category-java-errorprone-xml-detachedtestcase" aria-hidden="true">#</a> 31）category/java/errorprone.xml/DetachedTestCase</h4><h4 id="_32-category-java-errorprone-xml-donotcallgarbagecollectionexplicitly" tabindex="-1"><a class="header-anchor" href="#_32-category-java-errorprone-xml-donotcallgarbagecollectionexplicitly" aria-hidden="true">#</a> 32）category/java/errorprone.xml/DoNotCallGarbageCollectionExplicitly</h4><h4 id="_33-category-java-errorprone-xml-donotextendjavalangthrowable" tabindex="-1"><a class="header-anchor" href="#_33-category-java-errorprone-xml-donotextendjavalangthrowable" aria-hidden="true">#</a> 33）category/java/errorprone.xml/DoNotExtendJavaLangThrowable</h4><h4 id="_34-category-java-errorprone-xml-donothardcodesdcard" tabindex="-1"><a class="header-anchor" href="#_34-category-java-errorprone-xml-donothardcodesdcard" aria-hidden="true">#</a> 34）category/java/errorprone.xml/DoNotHardCodeSDCard</h4><h4 id="_35-category-java-errorprone-xml-donotterminatevm" tabindex="-1"><a class="header-anchor" href="#_35-category-java-errorprone-xml-donotterminatevm" aria-hidden="true">#</a> 35）category/java/errorprone.xml/DoNotTerminateVM</h4><h4 id="_36-category-java-errorprone-xml-donotthrowexceptioninfinally" tabindex="-1"><a class="header-anchor" href="#_36-category-java-errorprone-xml-donotthrowexceptioninfinally" aria-hidden="true">#</a> 36）category/java/errorprone.xml/DoNotThrowExceptionInFinally</h4><h4 id="_37-category-java-errorprone-xml-dontimportsun" tabindex="-1"><a class="header-anchor" href="#_37-category-java-errorprone-xml-dontimportsun" aria-hidden="true">#</a> 37）category/java/errorprone.xml/DontImportSun</h4><h4 id="_38-category-java-errorprone-xml-dontusefloattypeforloopindices" tabindex="-1"><a class="header-anchor" href="#_38-category-java-errorprone-xml-dontusefloattypeforloopindices" aria-hidden="true">#</a> 38）category/java/errorprone.xml/DontUseFloatTypeForLoopIndices</h4><h4 id="_39-category-java-errorprone-xml-emptycatchblock" tabindex="-1"><a class="header-anchor" href="#_39-category-java-errorprone-xml-emptycatchblock" aria-hidden="true">#</a> 39）category/java/errorprone.xml/EmptyCatchBlock</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Default Value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">allowCommentedBlocks</td><td style="text-align:left;">false</td><td style="text-align:left;">将跳过包含注释的空块。</td></tr><tr><td style="text-align:left;">allowExceptionNameRegex</td><td style="text-align:left;">^(ignored|expected)$</td><td style="text-align:left;">将跳过捕获名称匹配此正则表达式的异常的空块。</td></tr></tbody></table><h4 id="_40-category-java-errorprone-xml-emptyfinalizer" tabindex="-1"><a class="header-anchor" href="#_40-category-java-errorprone-xml-emptyfinalizer" aria-hidden="true">#</a> 40）category/java/errorprone.xml/EmptyFinalizer</h4><h4 id="_41-category-java-errorprone-xml-equalsnull" tabindex="-1"><a class="header-anchor" href="#_41-category-java-errorprone-xml-equalsnull" aria-hidden="true">#</a> 41）category/java/errorprone.xml/EqualsNull</h4><h4 id="_42-category-java-errorprone-xml-finalizedoesnotcallsuperfinalize" tabindex="-1"><a class="header-anchor" href="#_42-category-java-errorprone-xml-finalizedoesnotcallsuperfinalize" aria-hidden="true">#</a> 42）category/java/errorprone.xml/FinalizeDoesNotCallSuperFinalize</h4><h4 id="_43-category-java-errorprone-xml-finalizeonlycallssuperfinalize" tabindex="-1"><a class="header-anchor" href="#_43-category-java-errorprone-xml-finalizeonlycallssuperfinalize" aria-hidden="true">#</a> 43）category/java/errorprone.xml/FinalizeOnlyCallsSuperFinalize</h4><h4 id="_44-category-java-errorprone-xml-finalizeoverloaded" tabindex="-1"><a class="header-anchor" href="#_44-category-java-errorprone-xml-finalizeoverloaded" aria-hidden="true">#</a> 44）category/java/errorprone.xml/FinalizeOverloaded</h4><h4 id="_45-category-java-errorprone-xml-finalizeshouldbeprotected" tabindex="-1"><a class="header-anchor" href="#_45-category-java-errorprone-xml-finalizeshouldbeprotected" aria-hidden="true">#</a> 45）category/java/errorprone.xml/FinalizeShouldBeProtected</h4><h4 id="_46-category-java-errorprone-xml-idempotentoperations" tabindex="-1"><a class="header-anchor" href="#_46-category-java-errorprone-xml-idempotentoperations" aria-hidden="true">#</a> 46）category/java/errorprone.xml/IdempotentOperations</h4><h4 id="_47-category-java-errorprone-xml-implicitswitchfallthrough" tabindex="-1"><a class="header-anchor" href="#_47-category-java-errorprone-xml-implicitswitchfallthrough" aria-hidden="true">#</a> 47）category/java/errorprone.xml/ImplicitSwitchFallThrough</h4><h4 id="_48-category-java-errorprone-xml-instantiationtogetclass" tabindex="-1"><a class="header-anchor" href="#_48-category-java-errorprone-xml-instantiationtogetclass" aria-hidden="true">#</a> 48）category/java/errorprone.xml/InstantiationToGetClass</h4><h4 id="_49-category-java-errorprone-xml-invalidlogmessageformat" tabindex="-1"><a class="header-anchor" href="#_49-category-java-errorprone-xml-invalidlogmessageformat" aria-hidden="true">#</a> 49）category/java/errorprone.xml/InvalidLogMessageFormat</h4><h4 id="_50-category-java-errorprone-xml-jumbledincrementer" tabindex="-1"><a class="header-anchor" href="#_50-category-java-errorprone-xml-jumbledincrementer" aria-hidden="true">#</a> 50）category/java/errorprone.xml/JumbledIncrementer</h4><h4 id="_51-category-java-errorprone-xml-junitspelling" tabindex="-1"><a class="header-anchor" href="#_51-category-java-errorprone-xml-junitspelling" aria-hidden="true">#</a> 51）category/java/errorprone.xml/JUnitSpelling</h4><h4 id="_52-category-java-errorprone-xml-junitstaticsuite" tabindex="-1"><a class="header-anchor" href="#_52-category-java-errorprone-xml-junitstaticsuite" aria-hidden="true">#</a> 52）category/java/errorprone.xml/JUnitStaticSuite</h4><h4 id="_53-category-java-errorprone-xml-methodwithsamenameasenclosingclass" tabindex="-1"><a class="header-anchor" href="#_53-category-java-errorprone-xml-methodwithsamenameasenclosingclass" aria-hidden="true">#</a> 53）category/java/errorprone.xml/MethodWithSameNameAsEnclosingClass</h4><h4 id="_54-category-java-errorprone-xml-misplacednullcheck" tabindex="-1"><a class="header-anchor" href="#_54-category-java-errorprone-xml-misplacednullcheck" aria-hidden="true">#</a> 54）category/java/errorprone.xml/MisplacedNullCheck</h4><h4 id="_55-category-java-errorprone-xml-missingserialversionuid" tabindex="-1"><a class="header-anchor" href="#_55-category-java-errorprone-xml-missingserialversionuid" aria-hidden="true">#</a> 55）category/java/errorprone.xml/MissingSerialVersionUID</h4><h4 id="_56-category-java-errorprone-xml-missingstaticmethodinnoninstantiatableclass" tabindex="-1"><a class="header-anchor" href="#_56-category-java-errorprone-xml-missingstaticmethodinnoninstantiatableclass" aria-hidden="true">#</a> 56）category/java/errorprone.xml/MissingStaticMethodInNonInstantiatableClass</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">annotations</td><td style="text-align:left;">org.springframework.beans.factory.annotation.Autowired , javax.inject.Inject , com.google.inject.Inject</td><td style="text-align:left;">如果构造函数被注解为这些注解之一，则类将被忽略。</td></tr></tbody></table><h4 id="_57-category-java-errorprone-xml-morethanonelogger" tabindex="-1"><a class="header-anchor" href="#_57-category-java-errorprone-xml-morethanonelogger" aria-hidden="true">#</a> 57）category/java/errorprone.xml/MoreThanOneLogger</h4><h4 id="_58-category-java-errorprone-xml-noncaselabelinswitchstatement" tabindex="-1"><a class="header-anchor" href="#_58-category-java-errorprone-xml-noncaselabelinswitchstatement" aria-hidden="true">#</a> 58）category/java/errorprone.xml/NonCaseLabelInSwitchStatement</h4><h4 id="_59-category-java-errorprone-xml-nonserializableclass" tabindex="-1"><a class="header-anchor" href="#_59-category-java-errorprone-xml-nonserializableclass" aria-hidden="true">#</a> 59）category/java/errorprone.xml/NonSerializableClass</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">prefix</td><td style="text-align:left;"></td><td style="text-align:left;">过时的变量前缀要跳过，例如，m_。</td></tr><tr><td style="text-align:left;">checkAbstractTypes</td><td style="text-align:left;">false</td><td style="text-align:left;">启用以验证具有抽象类型的字段，如抽象类、接口、泛型类型或 java.lang.Object。启用此选项可能会导致更多的误报，因为实际上具体的运行时类型可能是可序列化的。</td></tr></tbody></table><h4 id="_60-category-java-errorprone-xml-nonstaticinitializer" tabindex="-1"><a class="header-anchor" href="#_60-category-java-errorprone-xml-nonstaticinitializer" aria-hidden="true">#</a> 60）category/java/errorprone.xml/NonStaticInitializer</h4><h4 id="_61-category-java-errorprone-xml-nullassignment" tabindex="-1"><a class="header-anchor" href="#_61-category-java-errorprone-xml-nullassignment" aria-hidden="true">#</a> 61）category/java/errorprone.xml/NullAssignment</h4><h4 id="_62-category-java-errorprone-xml-overridebothequalsandhashcode" tabindex="-1"><a class="header-anchor" href="#_62-category-java-errorprone-xml-overridebothequalsandhashcode" aria-hidden="true">#</a> 62）category/java/errorprone.xml/OverrideBothEqualsAndHashcode</h4><h4 id="_63-category-java-errorprone-xml-propercloneimplementation" tabindex="-1"><a class="header-anchor" href="#_63-category-java-errorprone-xml-propercloneimplementation" aria-hidden="true">#</a> 63）category/java/errorprone.xml/ProperCloneImplementation</h4><h4 id="_64-category-java-errorprone-xml-properlogger" tabindex="-1"><a class="header-anchor" href="#_64-category-java-errorprone-xml-properlogger" aria-hidden="true">#</a> 64）category/java/errorprone.xml/ProperLogger</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">staticLoggerName</td><td style="text-align:left;">LOG</td><td style="text-align:left;">静态 Logger 变量的名称。</td></tr><tr><td style="text-align:left;">loggerName</td><td style="text-align:left;">log</td><td style="text-align:left;">Logger 实例变量的名称。</td></tr><tr><td style="text-align:left;">loggerClass</td><td style="text-align:left;">org.apache.commons.logging.Log</td><td style="text-align:left;">Logger 的类名。</td></tr></tbody></table><h4 id="_65-category-java-errorprone-xml-returnemptycollectionratherthannull" tabindex="-1"><a class="header-anchor" href="#_65-category-java-errorprone-xml-returnemptycollectionratherthannull" aria-hidden="true">#</a> 65）category/java/errorprone.xml/ReturnEmptyCollectionRatherThanNull</h4><h4 id="_66-category-java-errorprone-xml-returnfromfinallyblock" tabindex="-1"><a class="header-anchor" href="#_66-category-java-errorprone-xml-returnfromfinallyblock" aria-hidden="true">#</a> 66）category/java/errorprone.xml/ReturnFromFinallyBlock</h4><h4 id="_67-category-java-errorprone-xml-simpledateformatneedslocale" tabindex="-1"><a class="header-anchor" href="#_67-category-java-errorprone-xml-simpledateformatneedslocale" aria-hidden="true">#</a> 67）category/java/errorprone.xml/SimpleDateFormatNeedsLocale</h4><h4 id="_68-category-java-errorprone-xml-singlemethodsingleton" tabindex="-1"><a class="header-anchor" href="#_68-category-java-errorprone-xml-singlemethodsingleton" aria-hidden="true">#</a> 68）category/java/errorprone.xml/SingleMethodSingleton</h4><h4 id="_69-category-java-errorprone-xml-singletonclassreturningnewinstance" tabindex="-1"><a class="header-anchor" href="#_69-category-java-errorprone-xml-singletonclassreturningnewinstance" aria-hidden="true">#</a> 69）category/java/errorprone.xml/SingletonClassReturningNewInstance</h4><h4 id="_70-category-java-errorprone-xml-staticejbfieldshouldbefinal" tabindex="-1"><a class="header-anchor" href="#_70-category-java-errorprone-xml-staticejbfieldshouldbefinal" aria-hidden="true">#</a> 70）category/java/errorprone.xml/StaticEJBFieldShouldBeFinal</h4><h4 id="_71-category-java-errorprone-xml-stringbufferinstantiationwithchar" tabindex="-1"><a class="header-anchor" href="#_71-category-java-errorprone-xml-stringbufferinstantiationwithchar" aria-hidden="true">#</a> 71）category/java/errorprone.xml/StringBufferInstantiationWithChar</h4><h4 id="_72-category-java-errorprone-xml-suspiciousequalsmethodname" tabindex="-1"><a class="header-anchor" href="#_72-category-java-errorprone-xml-suspiciousequalsmethodname" aria-hidden="true">#</a> 72）category/java/errorprone.xml/SuspiciousEqualsMethodName</h4><h4 id="_73-category-java-errorprone-xml-suspicioushashcodemethodname" tabindex="-1"><a class="header-anchor" href="#_73-category-java-errorprone-xml-suspicioushashcodemethodname" aria-hidden="true">#</a> 73）category/java/errorprone.xml/SuspiciousHashcodeMethodName</h4><h4 id="_74-category-java-errorprone-xml-suspiciousoctalescape" tabindex="-1"><a class="header-anchor" href="#_74-category-java-errorprone-xml-suspiciousoctalescape" aria-hidden="true">#</a> 74）category/java/errorprone.xml/SuspiciousOctalEscape</h4><h4 id="_75-category-java-errorprone-xml-testclasswithouttestcases" tabindex="-1"><a class="header-anchor" href="#_75-category-java-errorprone-xml-testclasswithouttestcases" aria-hidden="true">#</a> 75）category/java/errorprone.xml/TestClassWithoutTestCases</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">testClassPattern</td><td style="text-align:left;">^(?:.<em>.)?Test[^.]</em>$|^(?:.*.)?.<em>Tests?$|^(?:.</em>.)?.*TestCase$</td><td style="text-align:left;">用于通过完全限定名称识别测试类的测试类名模式。空模式会禁用根据名称检测测试类。自 PMD 6.51.0 起。</td></tr></tbody></table><h4 id="_76-category-java-errorprone-xml-unconditionalifstatement" tabindex="-1"><a class="header-anchor" href="#_76-category-java-errorprone-xml-unconditionalifstatement" aria-hidden="true">#</a> 76）category/java/errorprone.xml/UnconditionalIfStatement</h4><h4 id="_77-category-java-errorprone-xml-unnecessarybooleanassertion" tabindex="-1"><a class="header-anchor" href="#_77-category-java-errorprone-xml-unnecessarybooleanassertion" aria-hidden="true">#</a> 77）category/java/errorprone.xml/UnnecessaryBooleanAssertion</h4><h4 id="_78-category-java-errorprone-xml-unnecessarycasechange" tabindex="-1"><a class="header-anchor" href="#_78-category-java-errorprone-xml-unnecessarycasechange" aria-hidden="true">#</a> 78）category/java/errorprone.xml/UnnecessaryCaseChange</h4><h4 id="_79-category-java-errorprone-xml-unnecessaryconversiontemporary" tabindex="-1"><a class="header-anchor" href="#_79-category-java-errorprone-xml-unnecessaryconversiontemporary" aria-hidden="true">#</a> 79）category/java/errorprone.xml/UnnecessaryConversionTemporary</h4><h4 id="_80-category-java-errorprone-xml-unusednullcheckinequals" tabindex="-1"><a class="header-anchor" href="#_80-category-java-errorprone-xml-unusednullcheckinequals" aria-hidden="true">#</a> 80）category/java/errorprone.xml/UnusedNullCheckInEquals</h4><h4 id="_81-category-java-errorprone-xml-usecorrectexceptionlogging" tabindex="-1"><a class="header-anchor" href="#_81-category-java-errorprone-xml-usecorrectexceptionlogging" aria-hidden="true">#</a> 81）category/java/errorprone.xml/UseCorrectExceptionLogging</h4><h4 id="_82-category-java-errorprone-xml-useequalstocomparestrings" tabindex="-1"><a class="header-anchor" href="#_82-category-java-errorprone-xml-useequalstocomparestrings" aria-hidden="true">#</a> 82）category/java/errorprone.xml/UseEqualsToCompareStrings</h4><h4 id="_83-category-java-errorprone-xml-uselessoperationonimmutable" tabindex="-1"><a class="header-anchor" href="#_83-category-java-errorprone-xml-uselessoperationonimmutable" aria-hidden="true">#</a> 83）category/java/errorprone.xml/UselessOperationOnImmutable</h4><h4 id="_84-category-java-errorprone-xml-uselocalewithcaseconversions" tabindex="-1"><a class="header-anchor" href="#_84-category-java-errorprone-xml-uselocalewithcaseconversions" aria-hidden="true">#</a> 84）category/java/errorprone.xml/UseLocaleWithCaseConversions</h4><h4 id="_85-category-java-errorprone-xml-useproperclassloader" tabindex="-1"><a class="header-anchor" href="#_85-category-java-errorprone-xml-useproperclassloader" aria-hidden="true">#</a> 85）category/java/errorprone.xml/UseProperClassLoader</h4><h3 id="_3-6-多线程类-10条" tabindex="-1"><a class="header-anchor" href="#_3-6-多线程类-10条" aria-hidden="true">#</a> 3.6 多线程类(10条)</h3><h4 id="_1-category-java-multithreading-xml-avoidsynchronizedatmethodlevel" tabindex="-1"><a class="header-anchor" href="#_1-category-java-multithreading-xml-avoidsynchronizedatmethodlevel" aria-hidden="true">#</a> 1）category/java/multithreading.xml/AvoidSynchronizedAtMethodLevel</h4><h4 id="_2-category-java-multithreading-xml-avoidthreadgroup" tabindex="-1"><a class="header-anchor" href="#_2-category-java-multithreading-xml-avoidthreadgroup" aria-hidden="true">#</a> 2）category/java/multithreading.xml/AvoidThreadGroup</h4><h4 id="_3-category-java-multithreading-xml-avoidusingvolatile" tabindex="-1"><a class="header-anchor" href="#_3-category-java-multithreading-xml-avoidusingvolatile" aria-hidden="true">#</a> 3）category/java/multithreading.xml/AvoidUsingVolatile</h4><h4 id="_4-category-java-multithreading-xml-donotusethreads" tabindex="-1"><a class="header-anchor" href="#_4-category-java-multithreading-xml-donotusethreads" aria-hidden="true">#</a> 4）category/java/multithreading.xml/DoNotUseThreads</h4><h4 id="_5-category-java-multithreading-xml-dontcallthreadrun" tabindex="-1"><a class="header-anchor" href="#_5-category-java-multithreading-xml-dontcallthreadrun" aria-hidden="true">#</a> 5）category/java/multithreading.xml/DontCallThreadRun</h4><h4 id="_6-category-java-multithreading-xml-doublecheckedlocking" tabindex="-1"><a class="header-anchor" href="#_6-category-java-multithreading-xml-doublecheckedlocking" aria-hidden="true">#</a> 6）category/java/multithreading.xml/DoubleCheckedLocking</h4><h4 id="_7-category-java-multithreading-xml-nonthreadsafesingleton" tabindex="-1"><a class="header-anchor" href="#_7-category-java-multithreading-xml-nonthreadsafesingleton" aria-hidden="true">#</a> 7）category/java/multithreading.xml/NonThreadSafeSingleton</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">checkNonStaticMethods</td><td style="text-align:left;">true</td><td style="text-align:left;">检查非静态方法。请不要将此设置为 false 并将 checkNonStaticFields 设置为 true。</td></tr><tr><td style="text-align:left;">checkNonStaticFields</td><td style="text-align:left;">false</td><td style="text-align:left;">检查非静态字段。请不要将此设置为 true 并将 checkNonStaticMethods 设置为 false。</td></tr></tbody></table><h4 id="_8-category-java-multithreading-xml-unsynchronizedstaticformatter" tabindex="-1"><a class="header-anchor" href="#_8-category-java-multithreading-xml-unsynchronizedstaticformatter" aria-hidden="true">#</a> 8）category/java/multithreading.xml/UnsynchronizedStaticFormatter</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Default Value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">allowMethodLevelSynchronization</td><td style="text-align:left;">false</td><td style="text-align:left;">如果为 true，则允许方法级别的同步，以及同步块。否则，仅允许同步块。</td></tr></tbody></table><h4 id="_9-category-java-multithreading-xml-useconcurrenthashmap" tabindex="-1"><a class="header-anchor" href="#_9-category-java-multithreading-xml-useconcurrenthashmap" aria-hidden="true">#</a> 9）category/java/multithreading.xml/UseConcurrentHashMap</h4><h4 id="_10-category-java-multithreading-xml-usenotifyallinsteadofnotify" tabindex="-1"><a class="header-anchor" href="#_10-category-java-multithreading-xml-usenotifyallinsteadofnotify" aria-hidden="true">#</a> 10）category/java/multithreading.xml/UseNotifyAllInsteadOfNotify</h4><h3 id="_3-7-performance-24条" tabindex="-1"><a class="header-anchor" href="#_3-7-performance-24条" aria-hidden="true">#</a> 3.7 Performance(24条)</h3><h4 id="_1-category-java-performance-xml-addemptystring" tabindex="-1"><a class="header-anchor" href="#_1-category-java-performance-xml-addemptystring" aria-hidden="true">#</a> 1） category/java/performance.xml/AddEmptyString</h4><h4 id="_2-category-java-performance-xml-appendcharacterwithchar" tabindex="-1"><a class="header-anchor" href="#_2-category-java-performance-xml-appendcharacterwithchar" aria-hidden="true">#</a> 2） category/java/performance.xml/AppendCharacterWithChar</h4><h4 id="_3-category-java-performance-xml-avoidarrayloops" tabindex="-1"><a class="header-anchor" href="#_3-category-java-performance-xml-avoidarrayloops" aria-hidden="true">#</a> 3） category/java/performance.xml/AvoidArrayLoops</h4><h4 id="_4-category-java-performance-xml-avoidcalendardatecreation" tabindex="-1"><a class="header-anchor" href="#_4-category-java-performance-xml-avoidcalendardatecreation" aria-hidden="true">#</a> 4） category/java/performance.xml/AvoidCalendarDateCreation</h4><h4 id="_5-category-java-performance-xml-avoidfilestream" tabindex="-1"><a class="header-anchor" href="#_5-category-java-performance-xml-avoidfilestream" aria-hidden="true">#</a> 5） category/java/performance.xml/AvoidFileStream</h4><h4 id="_6-category-java-performance-xml-avoidinstantiatingobjectsinloops" tabindex="-1"><a class="header-anchor" href="#_6-category-java-performance-xml-avoidinstantiatingobjectsinloops" aria-hidden="true">#</a> 6） category/java/performance.xml/AvoidInstantiatingObjectsInLoops</h4><h4 id="_7-category-java-performance-xml-bigintegerinstantiation" tabindex="-1"><a class="header-anchor" href="#_7-category-java-performance-xml-bigintegerinstantiation" aria-hidden="true">#</a> 7） category/java/performance.xml/BigIntegerInstantiation</h4><h4 id="_8-category-java-performance-xml-consecutiveappendsshouldreuse" tabindex="-1"><a class="header-anchor" href="#_8-category-java-performance-xml-consecutiveappendsshouldreuse" aria-hidden="true">#</a> 8） category/java/performance.xml/ConsecutiveAppendsShouldReuse</h4><h4 id="_9-category-java-performance-xml-consecutiveliteralappends" tabindex="-1"><a class="header-anchor" href="#_9-category-java-performance-xml-consecutiveliteralappends" aria-hidden="true">#</a> 9） category/java/performance.xml/ConsecutiveLiteralAppends</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">threshold</td><td style="text-align:left;">1</td><td style="text-align:left;">最大连续的追加操作。</td></tr></tbody></table><h4 id="_10-category-java-performance-xml-inefficientemptystringcheck" tabindex="-1"><a class="header-anchor" href="#_10-category-java-performance-xml-inefficientemptystringcheck" aria-hidden="true">#</a> 10） category/java/performance.xml/InefficientEmptyStringCheck</h4><h4 id="_11-category-java-performance-xml-inefficientstringbuffering" tabindex="-1"><a class="header-anchor" href="#_11-category-java-performance-xml-inefficientstringbuffering" aria-hidden="true">#</a> 11） category/java/performance.xml/InefficientStringBuffering</h4><h4 id="_12-category-java-performance-xml-insufficientstringbufferdeclaration" tabindex="-1"><a class="header-anchor" href="#_12-category-java-performance-xml-insufficientstringbufferdeclaration" aria-hidden="true">#</a> 12） category/java/performance.xml/InsufficientStringBufferDeclaration</h4><h4 id="_13-category-java-performance-xml-optimizabletoarraycall" tabindex="-1"><a class="header-anchor" href="#_13-category-java-performance-xml-optimizabletoarraycall" aria-hidden="true">#</a> 13） category/java/performance.xml/OptimizableToArrayCall</h4><h4 id="_14-category-java-performance-xml-redundantfieldinitializer" tabindex="-1"><a class="header-anchor" href="#_14-category-java-performance-xml-redundantfieldinitializer" aria-hidden="true">#</a> 14） category/java/performance.xml/RedundantFieldInitializer</h4><h4 id="_15-category-java-performance-xml-stringinstantiation" tabindex="-1"><a class="header-anchor" href="#_15-category-java-performance-xml-stringinstantiation" aria-hidden="true">#</a> 15） category/java/performance.xml/StringInstantiation</h4><h4 id="_16-category-java-performance-xml-stringtostring" tabindex="-1"><a class="header-anchor" href="#_16-category-java-performance-xml-stringtostring" aria-hidden="true">#</a> 16） category/java/performance.xml/StringToString</h4><h4 id="_17-category-java-performance-xml-toofewbranchesforaswitchstatement" tabindex="-1"><a class="header-anchor" href="#_17-category-java-performance-xml-toofewbranchesforaswitchstatement" aria-hidden="true">#</a> 17） category/java/performance.xml/TooFewBranchesForASwitchStatement</h4><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">minimumNumberCaseForASwitch</td><td style="text-align:left;">3</td><td style="text-align:left;"><code>switch</code> 语句的最小分支数。</td></tr></tbody></table><h4 id="_18-category-java-performance-xml-usearraylistinsteadofvector" tabindex="-1"><a class="header-anchor" href="#_18-category-java-performance-xml-usearraylistinsteadofvector" aria-hidden="true">#</a> 18） category/java/performance.xml/UseArrayListInsteadOfVector</h4><h4 id="_19-category-java-performance-xml-usearraysaslist" tabindex="-1"><a class="header-anchor" href="#_19-category-java-performance-xml-usearraysaslist" aria-hidden="true">#</a> 19） category/java/performance.xml/UseArraysAsList</h4><h4 id="_20-category-java-performance-xml-useindexofchar" tabindex="-1"><a class="header-anchor" href="#_20-category-java-performance-xml-useindexofchar" aria-hidden="true">#</a> 20） category/java/performance.xml/UseIndexOfChar</h4><h4 id="_21-category-java-performance-xml-useiostreamswithapachecommonsfileitem" tabindex="-1"><a class="header-anchor" href="#_21-category-java-performance-xml-useiostreamswithapachecommonsfileitem" aria-hidden="true">#</a> 21） category/java/performance.xml/UseIOStreamsWithApacheCommonsFileItem</h4><h4 id="_22-category-java-performance-xml-uselessstringvalueof" tabindex="-1"><a class="header-anchor" href="#_22-category-java-performance-xml-uselessstringvalueof" aria-hidden="true">#</a> 22） category/java/performance.xml/UselessStringValueOf</h4><h4 id="_23-category-java-performance-xml-usestringbufferforstringappends" tabindex="-1"><a class="header-anchor" href="#_23-category-java-performance-xml-usestringbufferforstringappends" aria-hidden="true">#</a> 23） category/java/performance.xml/UseStringBufferForStringAppends</h4><h4 id="_24-category-java-performance-xml-usestringbufferlength" tabindex="-1"><a class="header-anchor" href="#_24-category-java-performance-xml-usestringbufferlength" aria-hidden="true">#</a> 24） category/java/performance.xml/UseStringBufferLength</h4><h3 id="_3-8-安全类-2条" tabindex="-1"><a class="header-anchor" href="#_3-8-安全类-2条" aria-hidden="true">#</a> 3.8 安全类(2条)</h3><h4 id="_1-category-java-security-xml-hardcodedcryptokey" tabindex="-1"><a class="header-anchor" href="#_1-category-java-security-xml-hardcodedcryptokey" aria-hidden="true">#</a> 1）category/java/security.xml/HardCodedCryptoKey</h4><h4 id="_2-category-java-security-xml-insecurecryptoiv" tabindex="-1"><a class="header-anchor" href="#_2-category-java-security-xml-insecurecryptoiv" aria-hidden="true">#</a> 2）category/java/security.xml/InsecureCryptoIv</h4><h2 id="_4-第三方规则集" tabindex="-1"><a class="header-anchor" href="#_4-第三方规则集" aria-hidden="true">#</a> 4 第三方规则集</h2><h3 id="_4-1-jpinpoint-rules" tabindex="-1"><a class="header-anchor" href="#_4-1-jpinpoint-rules" aria-hidden="true">#</a> 4.1 jPinpoint rules</h3><p>用于检测Java和Kotlin代码性能方面的问题。</p><ul><li>https://github.com/jborgers/PMD-jPinpoint-rules</li></ul><h3 id="_4-2-arch4u-pmd" tabindex="-1"><a class="header-anchor" href="#_4-2-arch4u-pmd" aria-hidden="true">#</a> 4.2 arch4u-pmd</h3><p>一个pmd规则库，检测REST API，日志记录，监听等方面的已知问题。对默认pmd规则重新进行了配置，减少了在使用Spring、Quarkus等框架时的误报。</p><ul><li>https://github.com/dgroup/arch4u-pmd</li></ul><h3 id="_4-3-maxdocs" tabindex="-1"><a class="header-anchor" href="#_4-3-maxdocs" aria-hidden="true">#</a> 4.3 maxdocs</h3><p>a multi markup wiki engine.</p><ul><li>https://github.com/bohni/maxdocs/blob/master/src/main/config/pmd/pmd-ruleset.xml</li></ul><h3 id="_4-4-geotools" tabindex="-1"><a class="header-anchor" href="#_4-4-geotools" aria-hidden="true">#</a> 4.4 geotools</h3><p>一个提供地理空间数据的开源java库。</p><ul><li>https://github.com/geotools/geotools/blob/main/build/qa/pmd-ruleset.xml</li><li>https://github.com/geotools/geotools/blob/main/build/qa/pmd-junit-ruleset.xml</li></ul><h2 id="_5报告" tabindex="-1"><a class="header-anchor" href="#_5报告" aria-hidden="true">#</a> 5报告</h2><h3 id="_5-1-sarif格式报告" tabindex="-1"><a class="header-anchor" href="#_5-1-sarif格式报告" aria-hidden="true">#</a> 5.1 sarif格式报告</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;$schema&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2.1.0&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;runs&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;tool&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;driver&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;PMD&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;7.0.0-rc4&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;informationUri&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://docs.pmd-code.org/latest/&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;rules&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
              <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;HardCodedCryptoKey&quot;</span><span class="token punctuation">,</span>
              <span class="token property">&quot;shortDescription&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;text&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Do not use hard coded encryption keys&quot;</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token property">&quot;fullDescription&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;text&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\\nDo not use hard coded values for cryptographic operations. Please store keys outside of source code.\\n        &quot;</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token property">&quot;helpUri&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://docs.pmd-code.org/pmd-doc-7.0.0-rc4/pmd_rules_java_security.html#hardcodedcryptokey&quot;</span><span class="token punctuation">,</span>
              <span class="token property">&quot;help&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;text&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\\nDo not use hard coded values for cryptographic operations. Please store keys outside of source code.\\n        &quot;</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token property">&quot;properties&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;ruleset&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Security&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;priority&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
                <span class="token property">&quot;tags&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                  <span class="token string">&quot;Security&quot;</span>
                <span class="token punctuation">]</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;results&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token property">&quot;ruleId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;HardCodedCryptoKey&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;ruleIndex&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
          <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;text&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Do not use hard coded encryption keys&quot;</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token property">&quot;locations&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
              <span class="token property">&quot;physicalLocation&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;artifactLocation&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                  <span class="token property">&quot;uri&quot;</span><span class="token operator">:</span> <span class="token string">&quot;file:///D:/PMD-Test/source-code/pmd-build-in-rule/src/main/java/category/java/security/HardCodedCryptoKey.java&quot;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;region&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                  <span class="token property">&quot;startLine&quot;</span><span class="token operator">:</span> <span class="token number">11</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;startColumn&quot;</span><span class="token operator">:</span> <span class="token number">57</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;endLine&quot;</span><span class="token operator">:</span> <span class="token number">11</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;endColumn&quot;</span><span class="token operator">:</span> <span class="token number">73</span>
                <span class="token punctuation">}</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;invocations&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token property">&quot;executionSuccessful&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          <span class="token property">&quot;toolConfigurationNotifications&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token property">&quot;toolExecutionNotifications&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="二-pmd-cpd-重复代码检测" tabindex="-1"><a class="header-anchor" href="#二-pmd-cpd-重复代码检测" aria-hidden="true">#</a> 二 pmd cpd(重复代码检测)</h1><h2 id="_1调用指令" tabindex="-1"><a class="header-anchor" href="#_1调用指令" aria-hidden="true">#</a> 1调用指令</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pmd cpd ^
--minimum-tokens <span class="token number">10</span> ^
<span class="token parameter variable">-d</span> D:<span class="token punctuation">\\</span>PMD-Test<span class="token punctuation">\\</span>source-code<span class="token punctuation">\\</span>pmd-build-in-rule ^
<span class="token parameter variable">-l</span> <span class="token function">java</span> ^
<span class="token parameter variable">-e</span> UTF-8 ^
--skip-lexical-errors <span class="token boolean">true</span> ^
<span class="token parameter variable">-f</span> text ^
--no-fail-on-violation
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,375),x=t("thead",null,[t("tr",null,[t("th",null,"选项"),t("th",null,"描述"),t("th",null,"应用于"),t("th",null,"默认")])],-1),m=t("tr",null,[t("td",null,"--minimum-tokens <count>"),t("td",null,"必选参数，判断代码重复的最小token数"),t("td"),t("td")],-1),u=t("tr",null,[t("td",null,"--dir <path> -d <path>"),t("td",null,"源文件路径，或者包含了源文件的目录Zip包和jar包都支持。如果直接定义目录只在当前目录下找源文件。--dir,--file-list,--uri三个参数至少定义一个"),t("td"),t("td")],-1),f=t("tr",null,[t("td",null,"--file-list <filepath>"),t("td",null,"文件列表配置文件的，一行配置一个源文件。--dir,--file-list,--uri三个参数至少定义一个。"),t("td"),t("td")],-1),v=t("td",null,"--language <lang> -l <lang>",-1),b={href:"https://docs.pmd-code.org/latest/pmd_userdocs_cpd.html#supported-languages",target:"_blank",rel:"noopener noreferrer"},j=t("td",null,null,-1),_=t("td",null,"java",-1),k=t("td",null,"--debug --verbose -D -v",-1),q={href:"https://docs.pmd-code.org/latest/pmd_userdocs_cpd.html#logging",target:"_blank",rel:"noopener noreferrer"},C=t("td",null,null,-1),A=t("td",null,null,-1),S=t("tr",null,[t("td",null,"--encoding <charset> -e <charset>"),t("td",null,"PMD按那种编码方式去读取源文件。支持的字符集参考java.nio.charset.Charset。"),t("td"),t("td",null,"UTF-8")],-1),w=t("tr",null,[t("td",null,"--skip-duplicate-files"),t("td",null,"在内容比较时忽略文件名相同，文件大小相同的源文件。"),t("td"),t("td",null,"false")],-1),I=t("tr",null,[t("td",null,"--exclude <path>"),t("td",null,"不分析的文件目录路径。"),t("td"),t("td")],-1),P=t("tr",null,[t("td",null,"--non-recursive"),t("td",null,"不扫描子目录"),t("td"),t("td",null,"false")],-1),D=t("tr",null,[t("td",null,"--skip-lexical-errors"),t("td",null,"在遇到无效字符时直接跳过而不是终止分析"),t("td"),t("td",null,"false")],-1),U=t("td",null,"--format <format> -f <format>",-1),T={href:"https://docs.pmd-code.org/latest/pmd_userdocs_cpd.html#available-report-formats",target:"_blank",rel:"noopener noreferrer"},M=t("td",null,null,-1),z=t("td",null,"text",-1),L=t("tr",null,[t("td",null,"--relativize-paths-with <path> -z <path>"),t("td",null,"报告中呈现的目录的相对路径。这样可以缩短报告中的目录/文件地址长度。"),t("td"),t("td")],-1),N=t("tr",null,[t("td",null,"--[no-]fail-on-violation"),t("td",null,"指定CPD是否以非零状态退出。默认发现问题将以状态4退出。如果设置了--no-fail-on-violation将以状态0退出，并且输出检测报告。"),t("td"),t("td")],-1),F=t("tr",null,[t("td",null,"--ignore-literals"),t("td",null,"比较式忽略数字值和字符串值。"),t("td",null,"Java"),t("td",null,"false")],-1),R=t("tr",null,[t("td",null,"--ignore-identifiers"),t("td",null,"比较时忽略常量和变量的名字。"),t("td",null,"Java"),t("td",null,"false")],-1),E=t("tr",null,[t("td",null,"--ignore-annotations"),t("td",null,"比较时忽略java的注解，C#的属性。"),t("td",null,"C#, Java"),t("td",null,"false")],-1),B=t("tr",null,[t("td",null,"--ignore-literal-sequences"),t("td",null,"忽略文字序列"),t("td",null,"C#, C++, Lua"),t("td",null,"false")],-1),O=t("tr",null,[t("td",null,"--ignore-sequences"),t("td",null,"忽略标识符和文字的序列"),t("td",null,"C++"),t("td",null,"false")],-1),V=t("tr",null,[t("td",null,"--ignore-usings"),t("td",null,"比较文本时忽略C#中的using指令"),t("td",null,"C#"),t("td",null,"false")],-1),Z=t("tr",null,[t("td",null,"--no-skip-blocks"),t("td",null,"不忽略由--skip-blocks-pattern匹配的代码块。"),t("td",null,"C++"),t("td",null,"false")],-1),J=t("tr",null,[t("td",null,"--skip-blocks-pattern"),t("td",null,"查找要跳过的块的模式。它是一个字符串属性，由两部分组成，用|分隔。第一部分是开始模式，第二部分是结束模式。"),t("td",null,"C++"),t("td",null,"#if 0|#endif")],-1),W=t("tr",null,[t("td",null,"--uri <uri> -u <uri>"),t("td",null,"数据库地址。--dir,--file-list,--uri三个参数至少定义一个。"),t("td"),t("td",null,"PLSQL")],-1),G=t("tr",null,[t("td",null,"--help -h"),t("td",null,"查看帮助信息"),t("td"),t("td")],-1),H=n(`<h2 id="_2-text格式报告" tabindex="-1"><a class="header-anchor" href="#_2-text格式报告" aria-hidden="true">#</a> 2 text格式报告</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Found a 2 line (14 tokens) duplication in the following files: 
Starting at line 5 of D:\\PMD-Test\\source-code\\pmd-build-in-rule\\src\\main\\java\\category\\java\\bestpractices\\AvoidReassigningParameters.java
Starting at line 9 of D:\\PMD-Test\\source-code\\pmd-build-in-rule\\src\\main\\java\\category\\java\\bestpractices\\AvoidReassigningParameters.java

        name = name.trim();
        System.out.println(&quot;Hello &quot; + name);

=====================================================================
Found a 4 line (13 tokens) duplication in the following files:
Starting at line 5 of D:\\PMD-Test\\source-code\\pmd-build-in-rule\\src\\main\\java\\category\\java\\bestpractices\\ArrayIsStoredDirectly.java
Starting at line 9 of D:\\PMD-Test\\source-code\\pmd-build-in-rule\\src\\main\\java\\category\\java\\bestpractices\\ArrayIsStoredDirectly.java

    private void ArrayIsStoredDirectlyD(String [] param) {
        // Don&#39;t do this, make a copy of the array at least
        this.x=param;
    }

=====================================================================
Found a 2 line (10 tokens) duplication in the following files:
Starting at line 7 of D:\\PMD-Test\\source-code\\pmd-build-in-rule\\src\\main\\java\\category\\java\\bestpractices\\ForLoopCanBeForeach.java
Starting at line 12 of D:\\PMD-Test\\source-code\\pmd-build-in-rule\\src\\main\\java\\cxf\\pmd\\test\\Main.java

        for (int i = 0; i &lt; l.size(); i++) { // pre Java 1.5
            System.out.println(l.get(i));
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function $(K,Q){const a=s("ExternalLinkIcon");return i(),o("div",null,[c,t("p",null,[t("a",h,[e("'完成参数参考'"),r(a)])]),g,t("p",null,[t("a",y,[e("'详细规则参考'"),r(a)])]),p,t("table",null,[x,t("tbody",null,[m,u,f,t("tr",null,[v,t("td",null,[e("源文件的语言类型。--help可以查看支持的所有语言。也可以参考"),t("a",b,[e("支持的语言open in new window"),r(a)]),e("。")]),j,_]),t("tr",null,[k,t("td",null,[e("Debug模式。输出更多的日志信息。日志参考"),t("a",q,[e("Loggingopen in new window"),r(a)]),e(".")]),C,A]),S,w,I,P,D,t("tr",null,[U,t("td",null,[e("报告格式。 "),t("a",T,[e("所有格式open in new window"),r(a)])]),M,z]),L,N,F,R,E,B,O,V,Z,J,W,G])]),H])}const Y=l(d,[["render",$],["__file","命令行调用PMD.html.vue"]]);export{Y as default};
