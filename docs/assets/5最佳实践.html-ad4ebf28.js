import{_ as n,r as a,o as d,c as s,a as e,d as t,e as o}from"./app-b63b8632.js";const _={},c=e("h1",{id:"最佳实践",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#最佳实践","aria-hidden":"true"},"#"),t(" 最佳实践")],-1),h=e("h2",{id:"选择合适的规则",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#选择合适的规则","aria-hidden":"true"},"#"),t(" 选择合适的规则")],-1),i=e("p",null,"​ 使用所有的规则进行检测，将得到巨量的提示信息，其中较大部分是不必要的。处理巨量的提示将是一种不切实际的方式。",-1),l=e("p",null,"​ 可以从最佳实践中找一些特殊的规则进行校验，例如不会执行的代码。然后再检查例如空的if语句问题，改规则在Error Prone类规则下。",-1),p={href:"https://docs.pmd-code.org/latest/pmd_rules_java.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://docs.pmd-code.org/latest/pmd_userdocs_making_rulesets.html",target:"_blank",rel:"noopener noreferrer"},u=e("h2",{id:"pmd并不是硬性规则",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#pmd并不是硬性规则","aria-hidden":"true"},"#"),t(" PMD并不是硬性规则")],-1),f=e("p",null,"​ 通常使用PMD的检测结果需要自己进一步分析是否需要修改。",-1),x=e("h2",{id:"推荐在ide上使用pmd插件",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#推荐在ide上使用pmd插件","aria-hidden":"true"},"#"),t(" 推荐在IDE上使用PMD插件")],-1),k=e("p",null,"​ 在ide上使用pmd插件比单独使用工具方便的多。如果基于PMD的html报告进行修改问题，将要在报告和ide之间不停地切换。而通过插件可以直接定位问题代码，可以大大提高效率。",-1);function b(g,D){const r=a("ExternalLinkIcon");return d(),s("div",null,[c,h,i,l,e("p",null,[t("​ 然后可以从"),e("a",p,[t("所有规则"),o(r)]),t("中找一些对自己项目有用的规则进行检查。")]),e("p",null,[t("​ 最后还可以自定义规则集 "),e("a",m,[t("自定义规则集"),o(r)]),t("。")]),u,f,x,k])}const P=n(_,[["render",b],["__file","5最佳实践.html.vue"]]);export{P as default};
