import{_ as p,r as c,o,c as l,a as s,d as n,e as t,b as e}from"./app-1acd32cf.js";const i={},u=e(`<h1 id="规则测试" tabindex="-1"><a class="header-anchor" href="#规则测试" aria-hidden="true">#</a> 规则测试</h1><p>Summary:学会如何使用PMD的一个简单的测试框架来进行规则的单元测试。</p><h2 id="引言" tabindex="-1"><a class="header-anchor" href="#引言" aria-hidden="true">#</a> 引言</h2><p>​ 好的规则应该有测试。至少需要一个正面测试案例 - 一个触发规则并报告违规的代码示例 - 以及一个反面测试案例 - 一个不会触发规则的代码示例。当然，测试越多，规则的验证就越好。如果规则更复杂或定义了可以修改行为的属性，那么还可以测试这些不同情况。</p><p>​ 如果对规则进行了错误修复，无论是误报还是漏报，都应该伴随着额外的测试案例，以确保不会在以后无意中重新引入错误。</p><h2 id="工作原理" tabindex="-1"><a class="header-anchor" href="#工作原理" aria-hidden="true">#</a> 工作原理</h2><p>​ PMD的内置规则组织成规则集，其中属于相同类别的所有规则都放在一个规则集中，例如“category/java/bestpractices.xml”。每个类别规则集都有一个抽象基本测试类，各个规则的测试类都继承自它。我们为每个规则创建一个测试类，用于执行单个规则的所有测试用例。实际的测试用例存储在单独的XML文件中，每个规则都有一个单独的文件。</p><p>​ 所有的测试类都继承自<code>net.sourceforge.pmd.testframework.PmdRuleTst</code>，它提供了与JUnit5的无缝集成。这个基类从具体的测试类中确定了语言、类别名称和规则名称。然后，它自己搜索测试代码。例如，具体的规则测试类<code>net.sourceforge.pmd.lang.java.rule.bestpractices.AbstractClassWithoutAbstractMethodTest</code>测试了名称为“AbstractClassWithoutAbstractMethod”的规则，该规则属于语言“java”的“bestpractices”类别。</p><p>​ 测试代码（参见下面的测试XML参考）完整地描述了测试用例，包括预期的行为，例如预期的规则违例数量、违例的位置等等。</p><p>​ 在你的集成开发环境（如Eclipse或IntelliJ IDEA）中运行测试类时，你还可以选择单个测试用例并仅执行该测试用例。</p><h2 id="测试代码存放位置" tabindex="-1"><a class="header-anchor" href="#测试代码存放位置" aria-hidden="true">#</a> 测试代码存放位置</h2><p>​ 测试代码应放置在规则所在的测试资源目录下。规则的测试资源文件应该遵循以下约定：XML文件是一个测试资源，因此它在src/test/resources目录树下搜索。</p><p>​ 测试类的子包xml应包含与规则名称相同的文件，位于test下。</p><p>​ 例如，要测试规则“AbstractClassWithoutAbstractMethod”，完全限定的测试类名称是：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>net.sourceforge.pmd.lang.java.rule.bestpractices.AbstractClassWithoutAbstractMethodTest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>​ 规则的测试代码可以在下面的这个文件找到：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>src/test/resources/net/sourceforge/pmd/lang/java/rule/bestpractices/xml/AbstractClassWithoutAbstractMethod.xml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>​ 通常情况下，一个测试类和数据的类名称和文件名格式如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>net.sourceforge.pmd.lang.&lt;Language Terse Name&gt;.rule.&lt;Category Name&gt;.&lt;Rule Name&gt;Test
src/test/resources/net/sourceforge/pmd/lang/&lt;Language Terse Name&gt;/rule/&lt;Category Name&gt;/xml/&lt;Rule Name&gt;.xml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>🎗️这个约定使你可以快速找到给定规则的测试用例：只需在项目中搜索文件&lt;Rule Name&gt;.xml。搜索类&lt;Rule Name&gt;Test以找到给定规则的单元测试类。如果规则是基于Java的规则，搜索&lt;Rule Name&gt;Rule将找到规则实现类。</p>`,20),d={href:"https://docs.pmd-code.org/latest/pmd_userdocs_extending_testing.html#using-the-test-framework-externally",target:"_blank",rel:"noopener noreferrer"},r=e(`<h2 id="简单的例子" tabindex="-1"><a class="header-anchor" href="#简单的例子" aria-hidden="true">#</a> 简单的例子</h2><h3 id="测试类" tabindex="-1"><a class="header-anchor" href="#测试类" aria-hidden="true">#</a> 测试类</h3><p>​ AbstractClassWithoutAbstractMethodTest</p><p>​ 这个类继承自PmdRuleTst，并位于“bestpractices”包中，因为该规则属于“最佳实践”类别：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">net<span class="token punctuation">.</span>sourceforge<span class="token punctuation">.</span>pmd<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>java<span class="token punctuation">.</span>rule<span class="token punctuation">.</span>bestpractices</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">net<span class="token punctuation">.</span>sourceforge<span class="token punctuation">.</span>pmd<span class="token punctuation">.</span>testframework<span class="token punctuation">.</span></span><span class="token class-name">PmdRuleTst</span></span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">AbstractClassWithoutAbstractMethodTest</span> <span class="token keyword">extends</span> <span class="token class-name">PmdRuleTst</span> <span class="token punctuation">{</span>
    <span class="token comment">// no additional unit tests</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>🎗️你也可以在这个测试类中添加标有@Test注解的标准JUnit测试方法。</p><h3 id="测试数据" tabindex="-1"><a class="header-anchor" href="#测试数据" aria-hidden="true">#</a> 测试数据</h3><pre><code>AvoidBranchingStatementAsLastInLoop.xml
</code></pre><p>​ 这是一个简化的示例，只包含两个测试用例。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>test-data</span>
    <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://pmd.sourceforge.net/rule-tests<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://pmd.sourceforge.net/rule-tests https://pmd.sourceforge.io/rule-tests_1_0_0.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>test-code</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>concrete class<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>expected-problems</span><span class="token punctuation">&gt;</span></span>0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>expected-problems</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[
public class Foo {}
    ]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>test-code</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>test-code</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>failure case<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>expected-problems</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>expected-problems</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>expected-linenumbers</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>expected-linenumbers</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[
public abstract class Foo {}
    ]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>test-code</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>test-data</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 每个测试用例都在独立的&lt;test-code&gt;元素中。第一个定义了0个预期问题，这意味着此代码不会触发规则。第二个测试用例期望有1个问题。由于规则违规报告还会提供确切的AST节点，您还可以验证行号。</p><h2 id="测试xml指南" tabindex="-1"><a class="header-anchor" href="#测试xml指南" aria-hidden="true">#</a> 测试XML指南</h2><p>​ 根元素是 <code>&lt;test-data&gt;</code>。它可以包含一个或多个 <code>&lt;test-code&gt;</code> 和 <code>&lt;code-fragment&gt;</code> 元素。每个 <code>&lt;test-code&gt;</code> 元素定义一个单独的测试用例。<code>&lt;code-fragment&gt;</code> 元素用于在不同测试用例之间共享代码片段。</p>`,13),k={href:"https://github.com/pmd/pmd/blob/master/pmd-test-schema/src/main/resources/net/sourceforge/pmd/test/schema/rule-tests_1_0_0.xsd",target:"_blank",rel:"noopener noreferrer"},g=e(`<h3 id="test-code-元素的属性" tabindex="-1"><a class="header-anchor" href="#test-code-元素的属性" aria-hidden="true">#</a> &lt;test-code&gt;元素的属性</h3><p>​ &lt;test-code&gt;元素支持以下可选属性：</p><p>​ 📍disabled: 默认情况下为false。将其设置为true，以忽略和跳过测试用例。</p><p>​ 📍focused: 默认情况下为false。将其设置为true，以忽略所有其他测试用例。</p><h3 id="test-code-子元素" tabindex="-1"><a class="header-anchor" href="#test-code-子元素" aria-hidden="true">#</a> &lt;test-code&gt;子元素</h3><p>​ 📍&lt;description&gt;: 测试用例的简短描述。这将成为报告中的JUnit测试名称。如果适用，此描述应包含对复现此测试用例的错误编号的引用。</p><p>​ 📍&lt;rule-property&gt;: 如果规则可配置，这是可选的规则属性。只需添加多个元素，以为一个测试用例设置多个属性。有关示例，请参见下文。</p><p>​ 📍&lt;expected-problems&gt;: 预期规则违规的原始数量，该规则预计要报告的。对于误报的测试用例，这总是“0”。对于漏报的测试用例，可以是任何正数。</p><p>​ 📍&lt;expected-linenumbers&gt;: 可选元素。它是逗号分隔的行号列表。如果报告了规则违规，这允许您断言行号。如果需要检测多个违规，并确保误报和漏报不互相抵消，这很有用。</p><p>​ 📍&lt;expected-messages&gt;: 带有&lt;message&gt;元素作为子元素的可选元素。可用于验证正确的错误消息，例如，如果错误消息引用变量名称。</p><p>​ 📍&lt;code&gt;: 必须提供&lt;code&gt;元素或&lt;code-ref&gt;元素之一。它提供了规则执行的实际代码片段。代码本身通常包含在“CDATA”部分中，因此不需要进一步的XML转义（如实体引用，如&lt;）。</p><p>​ 📍&lt;code-ref id=...&gt;: &lt;code&gt;的替代选项。引用文件中先前定义的&lt;code-fragment&gt;。这允许您与多个测试用例共享相同的代码片段。id属性必须与引用的代码片段的id匹配。</p><p>​ 📍&lt;source-type&gt;: 可选元素，用于指定特定的语言版本。这可用于选择用于解析代码片段的特定解析器版本。如果未提供，将使用规则语言的默认版本。几乎总是可以省略此元素。</p><h3 id="code-fragment" tabindex="-1"><a class="header-anchor" href="#code-fragment" aria-hidden="true">#</a> &lt;code-fragment&gt;</h3><p>​ 代码片段只有一个必需属性：id。此属性用于通过&lt;test-code&gt;内的&lt;code-ref&gt;元素引用它。与&lt;code&gt;元素类似，&lt;code-fragment&gt;的内容通常包含在“CDATA”部分中，因此不需要进一步的XML转义（如实体引用，如&lt;）。</p><h3 id="一个完整的例子" tabindex="-1"><a class="header-anchor" href="#一个完整的例子" aria-hidden="true">#</a> 一个完整的例子</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>test-data</span>
    <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://pmd.sourceforge.net/rule-tests<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://pmd.sourceforge.net/rule-tests https://pmd.sourceforge.io/rule-tests_1_0_0.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>test-code</span> <span class="token attr-name">disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>Just a description, will be used as the test name for JUnit in the reports<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule-property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>somePropName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>propValue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rule-property</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- optional --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>expected-problems</span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>expected-problems</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>expected-linenumbers</span><span class="token punctuation">&gt;</span></span>5,14<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>expected-linenumbers</span><span class="token punctuation">&gt;</span></span>               <span class="token comment">&lt;!-- optional --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>expected-messages</span><span class="token punctuation">&gt;</span></span>                                             <span class="token comment">&lt;!-- optional --&gt;</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>message</span><span class="token punctuation">&gt;</span></span>Violation message 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>message</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>message</span><span class="token punctuation">&gt;</span></span>Violation message 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>message</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>expected-messages</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[
public class ConsistentReturn {
    public Boolean foo() {
    }
}
        ]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source-type</span><span class="token punctuation">&gt;</span></span>java 1.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source-type</span><span class="token punctuation">&gt;</span></span>                             <span class="token comment">&lt;!-- optional --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>test-code</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code-fragment</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>codeSnippet1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[
public class ConsistentReturn {
    public Boolean foo() {
    }
}
    ]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code-fragment</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>test-code</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>test case using a code fragment<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>expected-problems</span><span class="token punctuation">&gt;</span></span>0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>expected-problems</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code-ref</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>codeSnippet1<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>test-code</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>test-data</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>🎗️为了更好的可读性，缩进应为4个空格，不要使用制表符。每个test-code之间应有一个空行分隔。只有希望以缩进格式呈现以提高可读性的代码片段才需要CDATA部分。描述可以直接书写，无需CDATA部分。</p><h2 id="外部使用测试框架" tabindex="-1"><a class="header-anchor" href="#外部使用测试框架" aria-hidden="true">#</a> 外部使用测试框架</h2><p>​ 还可以将测试框架用于在PMD源代码基础之外开发的自定义规则。要使用测试框架，只需引用net.sourceforge.pmd:pmd-test的依赖项即可。</p><p>​ maven中可以这样引用：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>net.sourceforge.pmd<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>pmd-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.0.0-rc4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 然后按照之前描述的步骤进行：创建您的测试类，创建您的测试用例并运行单元测试。</p><p>​ 不过有一个区别：由于您的包结构可能不同，您需要手动注册规则测试，因为SimpleAggregatorTst将无法正确从包和类名称中确定它：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>pmd<span class="token punctuation">.</span>rules</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">net<span class="token punctuation">.</span>sourceforge<span class="token punctuation">.</span>pmd<span class="token punctuation">.</span>testframework<span class="token punctuation">.</span></span><span class="token class-name">SimpleAggregatorTst</span></span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">CustomRuleTest</span> <span class="token keyword">extends</span> <span class="token class-name">SimpleAggregatorTst</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">setUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">addRule</span><span class="token punctuation">(</span><span class="token string">&quot;com/example/pmd/ruleset.xml&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;CustomRule&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 然后，它将在规则集中查找名为“CustomRule”的规则，该规则位于路径“com/example/pmd/ruleset.xml”下的“src/main/resources”中。</p><p>​ 测试数据应放在一个XML文件中，该文件位于路径“com/example/pmd/rules/xml/CustomRule.xml”下的“src/test/resources”中。</p><h2 id="测试框架的实现方式" tabindex="-1"><a class="header-anchor" href="#测试框架的实现方式" aria-hidden="true">#</a> 测试框架的实现方式</h2>`,28),m={href:"https://junit.org/junit5/docs/current/user-guide/#writing-tests-dynamic-tests",target:"_blank",rel:"noopener noreferrer"},v=s("p",null,"​ 📍PmdRuleTst：这是PMD代码库中测试的基类。它是RuleTst的子类，只包含基于测试类名确定测试资源的逻辑。",-1),b=s("p",null,"​ 📍SimpleAggregatorTst：这是测试类的更通用的基类。它本身不注册任何测试用例。您可以注册自己的规则测试。它本身是RuleTst的子类。",-1),h=s("p",null,"​ 📍Maven模块“pmd-test-schema”包含解析XML文件并提供RuleTestCollection的逻辑。RuleTestCollection又包含一系列RuleTestDescriptors。每个规则测试描述符描述一个单独的测试用例。",-1),x=s("p",null,"​ 📍RuleTst：使用模块“pmd-test-schema”的TestSchemaParser来解析测试用例，执行每个规则测试描述符并断言结果。它定义了一个名为ruleTests()的测试方法，它是一个测试工厂，为每个规则测试返回一个动态测试。",-1);function f(_,q){const a=c("ExternalLinkIcon");return o(),l("div",null,[u,s("p",null,[n("🎗️如果你想在这个测试框架下使用不同的包结构，参考"),s("a",d,[n("扩展测试框架"),t(a)])]),r,s("p",null,[n("​ 🎗️XML结构约束文件 "),s("a",k,[n("rule-tests.xsd"),t(a)])]),g,s("p",null,[n("​ 该框架在底层使用JUnit5的 "),s("a",m,[n("动态测试功能"),t(a)]),n("，以及一些实用工具类：")]),v,b,h,x])}const A=p(i,[["render",f],["__file","8规则测试.html.vue"]]);export{A as default};
