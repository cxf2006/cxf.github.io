import{_ as p,r as s,o as i,c as d,a,b as e,d as r,e as n}from"./app-d417e0ec.js";const o="/notes/assets/designer-top-33c2720e.png",h="/notes/assets/usages-54edaffa.gif",l="/notes/assets/bottom-ui-191e616f.png",c="/notes/assets/property-defs-1698915585879-13-3c9b63d1.png",m="/notes/assets/property-edit-0e3586dd.png",_="/notes/assets/export-example-809c6050.gif",g="/notes/assets/import-9824078f.gif",u="/notes/assets/all-green-ba227d28.png",f="/notes/assets/failing-5d147e78.png",x="/notes/assets/load-aa1a8d03.gif",b="/notes/assets/toolbar-fe628746.png",v="/notes/assets/add-violation-d2b0fa52.gif",P="/notes/assets/property-1698916717519-33-5249ce00.gif",M="/notes/assets/export-705a9953.gif",X={},T=a("h1",{id:"规则设计器",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#规则设计器","aria-hidden":"true"},"#"),e(" 规则设计器")],-1),D=a("p",null,"Summary:学习使用规则设计器，了解器功能。",-1),L=a("h2",{id:"安装、运行",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#安装、运行","aria-hidden":"true"},"#"),e(" 安装、运行")],-1),F={href:"https://docs.pmd-code.org/latest/pmd_userdocs_installation.html",target:"_blank",rel:"noopener noreferrer"},J={href:"https://gluonhq.com/products/javafx/",target:"_blank",rel:"noopener noreferrer"},A=n(`<p>​ 如果你配置了PMD的环境变量，可以直接按以下方式启动：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>~ $ pmd designer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code>C:\\&gt; pmd.bat designer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>🎗️pmd-ui.jar并不是一个可执行jar包，其中没有包含PMD核心模块和语言模块。</p><p>​ 这是为了方便更新，并让您选择您感兴趣的依赖项。可用的语言模块是应用程序的JVM类路径上的那些模块。这就是为什么建议使用标准的PMD启动脚本，它会使用可用的PMD库设置类路径。</p><h3 id="更新" tabindex="-1"><a class="header-anchor" href="#更新" aria-hidden="true">#</a> 更新</h3><p>​ 目前最新版本的PMD设计器与PMD 6.12.0及更高版本兼容。您可以在PMD分发包的安装文件夹中用最新的构建版本替换<code>pmd-ui-6.X.Y.jar</code>，然后正常运行。请注意，更新可能会导致一些持久化状态丢失，例如代码片段。</p><h2 id="使用指南" tabindex="-1"><a class="header-anchor" href="#使用指南" aria-hidden="true">#</a> 使用指南</h2><p>​ 规则设计器既是一种用于检查PMD规则在AST上运行的工具，也是以集成方式编写XPath规则的工具。本页面描述了支持这一功能的特点。</p><h3 id="ast生成" tabindex="-1"><a class="header-anchor" href="#ast生成" aria-hidden="true">#</a> AST生成</h3><p>​ <img src="`+o+`" alt="Designer top UI"></p><p>您可以在中间区域输入源代码。</p><p>请确保为您的源代码选择正确的语言和版本：</p><ul><li>使用菜单栏中的蓝色按钮来设置应用程序的语言</li><li>如果该语言有多个版本，您可以在代码区域上方的下拉框中选择特定版本</li><li>如果使用此设置的源代码有效，右侧的树将更新以显示代码的AST</li><li>选择一个节点时，左侧的面板将更新以显示关于节点的信息。</li></ul><h4 id="选择节点" tabindex="-1"><a class="header-anchor" href="#选择节点" aria-hidden="true">#</a> 选择节点</h4><p>​ 有几种方法可以专注于检查一个节点：</p><ul><li><p>从树视图中：只需单击一个项目</p><p>​ 自6.16.0版本以来，树视图也是可搜索的：当它处于焦点状态时，按下CTRL+F，或单击搜索按钮并输入搜索查询。您可以使用CTRL+TAB或CTRL+F3在结果之间循环，使用CTRL+SHIFT+TAB或CTRL+SHIFT+F3返回。</p></li><li><p>从面包屑栏中：位于代码区下方的面包屑栏显示当前选择节点的祖先，如果没有选择，则为空：</p></li><li><p>从源代码中：按住CTRL键一秒钟，直到代码区大部分变为蓝色。然后，您在代码区上悬停的每个节点都将自动选择。例如：</p></li></ul><h4 id="节点检查" tabindex="-1"><a class="header-anchor" href="#节点检查" aria-hidden="true">#</a> 节点检查</h4><p>左侧面板显示以下信息：</p><p>​ XPath属性：这基本上是XPath查询中可用的所有属性。这些属性是Java getter的包装器，因此您可以获取相关Javadoc的文档（但这些文档尚未集成到设计器中）。</p><pre><code>度量：对于支持度量的节点，度量的值显示在此面板中。 
</code></pre><p>​ 作用域：这是特定于Java的，显示了符号表的某种表示。大多数情况下，您不需要它。例如，如果选择一个变量id，它的用法已经自动高亮显示，无需打开面板：</p><p><img src="`+h+'" alt="Usages highlight example"></p><h3 id="xpath规则设计" tabindex="-1"><a class="header-anchor" href="#xpath规则设计" aria-hidden="true">#</a> XPath规则设计</h3><p>​ 下图是XPath规则设计的界面：</p><p><img src="'+l+'" alt="Bottom UI"></p><p>​ 中间部分是XPath表达式。当您输入它时，匹配的节点将在右侧更新，并在代码区域上突出显示。某些语言支持自动完成。</p><p>​ 注意：您可以在编辑器中保留多个规则（每个规则都有一个选项卡）。</p><h4 id="规则属性" tabindex="-1"><a class="header-anchor" href="#规则属性" aria-hidden="true">#</a> 规则属性</h4><p>​ 在XPath表达式区域上方，有一个名为“属性”的按钮，允许您为原型规则定义新属性。您还可以编辑现有属性。</p><p>​ 单击该按钮时，会出现一个小弹出窗口：</p><p><img src="'+c+'" alt="Property edition popup"></p><p>​ 弹出窗口中心包含当前定义属性的列表，显示它们的名称和期望类型。</p><p>​ 添加：单击“添加属性”按钮可在表格中添加一行</p><p>​ 删除：每个项目都有一个“垃圾桶”按钮，用于删除属性</p><p>​ 编辑：单击右侧的“省略号”按钮，可以进一步编辑每个属性。</p><h5 id="编辑属性" tabindex="-1"><a class="header-anchor" href="#编辑属性" aria-hidden="true">#</a> 编辑属性</h5><p>​ 属性编辑界面:</p><p><img src="'+m+`" alt="Property edition popup"></p><p>​ 📍您可以编辑属性的名称、描述、期望类型和默认值。</p><pre><code>📍所有这些信息都与规则定义一起导出（参见导出到XML规则）。 
</code></pre><p>​ 📍除非您正在编辑测试用例并为测试用例设置自定义值，否则将使用默认值。</p><h4 id="导出xml规则" tabindex="-1"><a class="header-anchor" href="#导出xml规则" aria-hidden="true">#</a> 导出xml规则</h4><p>​ 在齿轮图标旁边的小导出图标会打开一个菜单，用于导出您的规则。该菜单允许您填写XPath规则被包含在规则集中所需的元数据。</p><p><img src="`+_+'" alt="Rule export demo"></p><h3 id="规则测试" tabindex="-1"><a class="header-anchor" href="#规则测试" aria-hidden="true">#</a> 规则测试</h3><p>​ PMD有自己的XML格式来描述规则测试，并使用我们的测试框架执行它们。设计器包括一个测试编辑器，允许您编辑这些文件或在编辑规则时直接创建一个新文件。左侧XPath表达式区域的面板就是用于此目的。</p><p>​ 另请参阅测试框架文档。</p><h4 id="测试模型" tabindex="-1"><a class="header-anchor" href="#测试模型" aria-hidden="true">#</a> 测试模型</h4><p>​ 规则测试描述了</p><p>​ 📍规则的配置</p><p>​ 📍要运行的源代码</p><p>​ 📍预期的违规情况</p><p>​ 📍一个描述（用于命名测试）</p><p>​ 在执行测试时，规则会根据给定的配置在源代码上运行，然后将其发现的违规情况与预期的违规情况进行比较。</p><h4 id="添加测试" tabindex="-1"><a class="header-anchor" href="#添加测试" aria-hidden="true">#</a> 添加测试</h4><p>​ 可以通过以下四种方式添加测试：</p><ol><li><p>从XML文件：如果您已经有用于测试的测试XML文件，您可以轻松加载它定义的所有测试。 测试导入演示</p><p><img src="'+g+'" alt="Test import example"></p></li><li><p>来自当前源代码：将创建一个带有默认配置的新测试用例，其中包含当前编辑器中的源代码。</p></li><li><p>使用空白源代码：将创建一个带有默认配置的新测试用例，其中包含空白的源代码文件。然后您必须自行编辑源代码。</p></li><li><p>从现有测试用例中：每个测试用例列表项都有一个“复制”按钮，可以复制测试并加载新的测试用例。</p></li></ol><h4 id="测试状态" tabindex="-1"><a class="header-anchor" href="#测试状态" aria-hidden="true">#</a> 测试状态</h4><p>​ 在设计器中，测试面板是测试用例的列表。它们的状态（通过、失败、错误、未知）都采用了颜色编码。</p><p>所有都通过 (绿色):</p><p><img src="'+u+'" alt="All green"></p><p>测试失败 (黄色):</p><p>​ <img src="'+f+'" alt="Failing"></p><h4 id="加载测试用例" tabindex="-1"><a class="header-anchor" href="#加载测试用例" aria-hidden="true">#</a> 加载测试用例</h4><p>​ 每个测试用例都包含一段源代码，当测试加载到编辑器中时，您可以独立编辑它们。在加载测试时，可以选择额外的规则配置选项。</p><p>​ 加载操作使用“加载”按钮进行：</p><p><img src="'+x+'" alt="Test loading demo"></p><p>​ 加载测试演示 一次只能加载一个测试用例。如果卸载了加载的测试用例，编辑器将恢复到在加载第一个测试用例之前的状态。</p><h4 id="编辑加载的测试用例" tabindex="-1"><a class="header-anchor" href="#编辑加载的测试用例" aria-hidden="true">#</a> 编辑加载的测试用例</h4><p>​ 当加载测试时，您在代码区域中编辑的内容就是测试的源代码。更改与其他测试以及先前在编辑器中的源代码独立无关。</p><p>​ 当加载测试时，会在代码区域顶部显示一个额外的工具栏：</p><p><img src="'+b+'" alt="Failing"></p><h5 id="预期的违规情况" tabindex="-1"><a class="header-anchor" href="#预期的违规情况" aria-hidden="true">#</a> 预期的违规情况</h5><p>​ “预期的违规情况”按钮用于添加或编辑预期的违规情况。</p><p>​ 初始违规情况列表为空。您可以通过从显示节点的任何控件将节点拖放到按钮或其弹出窗口上来添加违规情况。例如：</p><p><img src="'+v+'" alt="Add violation gif"></p><h5 id="测试用例规则配置" tabindex="-1"><a class="header-anchor" href="#测试用例规则配置" aria-hidden="true">#</a> 测试用例规则配置</h5><p>​ 可以使用“属性映射”按钮独立为每个测试用例配置规则属性。例如：</p><p><img src="'+P+'" alt="Configure properties demo"></p><p>​ 测试规则属性演示 此配置将在执行测试以检查其状态时使用。</p><h4 id="导出测试" tabindex="-1"><a class="header-anchor" href="#导出测试" aria-hidden="true">#</a> 导出测试</h4><p>​ 在编辑测试完成后，最好将测试文件保存为XML文件。导出操作使用测试用例列表上方的“导出”按钮进行：</p><p><img src="'+M+'" alt="Test export demo"></p><p>​ 测试导出演示 请注意，导出的文件不包含关于规则的任何信息。规则必须位于其他地方的规则集文件中。</p>',85),C={href:"https://docs.pmd-code.org/latest/pmd_userdocs_extending_testing.html#where-to-place-the-test-code",target:"_blank",rel:"noopener noreferrer"};function R(k,S){const t=s("ExternalLinkIcon");return i(),d("div",null,[T,D,L,a("p",null,[e("​ 设计工具跟随PMD一起发布， "),a("a",F,[e("PMD安装参考"),r(t)]),e("。")]),a("p",null,[e("​ 工具运行需要JRE1.8及以上版本。特别注意JRE11之后，JavaFX需要单独安装，因为Java11z之后java和javaFX分开发布。到 "),a("a",J,[e("JavaFX下载界面"),r(t)]),e("下载之后解压配置JAVAFX_HOME环境变量即可。")]),A,a("p",null,[e("​ 如果您想要使用PMD的测试框架在构建中使用测试文件，请参考 "),a("a",C,[e("测试框架文档"),r(t)]),e("中解释的约定。")])])}const y=p(X,[["render",R],["__file","5规则设计指引.html.vue"]]);export{y as default};
