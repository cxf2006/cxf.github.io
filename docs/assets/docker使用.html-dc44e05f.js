import{_ as e,o as a,c as s,b as n}from"./app-26820943.js";const d={},r=n(`<h1 id="docker基本使用" tabindex="-1"><a class="header-anchor" href="#docker基本使用" aria-hidden="true">#</a> docker基本使用</h1><p>https://www.runoob.com/docker/docker-container-usage.html</p><p>生成docker实例</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-itd</span> <span class="token parameter variable">--name</span> ubuntu-test ubuntu /bin/bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>--network docker-network 指定docker内部网络</p><p>创建内部网络</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> network create docker-network <span class="token parameter variable">--driver</span> bridge
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>进入已运行docker命令模式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> 243c32535da7 /bin/bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删除docker实例</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token function">rm</span> <span class="token parameter variable">-f</span> 1e560fca3906
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删除镜像</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token function">docker</span> rmi hello-world
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="docker实例生成镜像" tabindex="-1"><a class="header-anchor" href="#docker实例生成镜像" aria-hidden="true">#</a> docker实例生成镜像</h1><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker commit -a &quot;cxf&quot; -m &quot;ubuntu update apt source-list&quot; 40624ead641c cxf/ubuntu:0.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="镜像打包和载入" tabindex="-1"><a class="header-anchor" href="#镜像打包和载入" aria-hidden="true">#</a> 镜像打包和载入</h1><p>镜像打成tar包：docker save -o cxf-ubuntu:0.1.tar cxf/ubuntu:0.1</p><p>从镜像文件载入： docker load -i cxf-ubuntu:0.1.tar</p>`,18),c=[r];function i(t,o){return a(),s("div",null,c)}const u=e(d,[["render",i],["__file","docker使用.html.vue"]]);export{u as default};
